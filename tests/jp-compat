#! /bin/sh
## --------------------- ##
## M4sh Initialization.  ##
## --------------------- ##

# Be Bourne compatible
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
  set -o posix
fi
DUALCASE=1; export DUALCASE # for MKS sh

# Support unset when possible.
if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
  as_unset=unset
else
  as_unset=false
fi


# Work around bugs in pre-3.0 UWIN ksh.
$as_unset ENV MAIL MAILPATH
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
for as_var in \
  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
  LC_TELEPHONE LC_TIME
do
  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
    eval $as_var=C; export $as_var
  else
    $as_unset $as_var
  fi
done

# Required to use basename.
if expr a : '\(a\)' >/dev/null 2>&1; then
  as_expr=expr
else
  as_expr=false
fi

if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi


# Name of the executable.
as_me=`$as_basename "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)$' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
  	  /^X\/\(\/\/\)$/{ s//\1/; q; }
  	  /^X\/\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`


# PATH needs CR, and LINENO needs CR and PATH.
# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  echo "#! /bin/sh" >conf$$.sh
  echo  "exit 0"   >>conf$$.sh
  chmod +x conf$$.sh
  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
    PATH_SEPARATOR=';'
  else
    PATH_SEPARATOR=:
  fi
  rm -f conf$$.sh
fi


  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x$as_lineno_3"  = "x$as_lineno_2"  || {
  # Find who we are.  Look in the path if we contain no path at all
  # relative or not.
  case $0 in
    *[\\/]* ) as_myself=$0 ;;
    *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
done

       ;;
  esac
  # We did not find ourselves, most probably we were run as `sh COMMAND'
  # in which case we are not to be found in the path.
  if test "x$as_myself" = x; then
    as_myself=$0
  fi
  if test ! -f "$as_myself"; then
    { echo "$as_me: error: cannot find myself; rerun with an absolute path" >&2
   { (exit 1); exit 1; }; }
  fi
  case $CONFIG_SHELL in
  '')
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for as_base in sh bash ksh sh5; do
	 case $as_dir in
	 /*)
	   if ("$as_dir/$as_base" -c '
  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
	     CONFIG_SHELL=$as_dir/$as_base
	     export CONFIG_SHELL
	     exec "$CONFIG_SHELL" "$0" ${1+"$@"}
	   fi;;
	 esac
       done
done
;;
  esac

  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
  # uniformly replaced by the line number.  The first 'sed' inserts a
  # line-number line before each line; the second 'sed' does the real
  # work.  The second script uses 'N' to pair each line-number line
  # with the numbered line, and appends trailing '-' during
  # substitution so that $LINENO is not a special case at line end.
  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
  # second 'sed' script.  Blame Lee E. McMahon for sed's syntax.  :-)
  sed '=' <$as_myself |
    sed '
      N
      s,$,-,
      : loop
      s,^\(['$as_cr_digits']*\)\(.*\)[$]LINENO\([^'$as_cr_alnum'_]\),\1\2\1\3,
      t loop
      s,-$,,
      s,^['$as_cr_digits']*\n,,
    ' >$as_me.lineno &&
  chmod +x $as_me.lineno ||
    { echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2
   { (exit 1); exit 1; }; }

  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensible to this).
  . ./$as_me.lineno
  # Exit status is that of the last command.
  exit
}


case `echo "testing\c"; echo 1,2,3`,`echo -n testing; echo 1,2,3` in
  *c*,-n*) ECHO_N= ECHO_C='
' ECHO_T='	' ;;
  *c*,*  ) ECHO_N=-n ECHO_C= ECHO_T= ;;
  *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
esac

if expr a : '\(a\)' >/dev/null 2>&1; then
  as_expr=expr
else
  as_expr=false
fi

rm -f conf$$ conf$$.exe conf$$.file
echo >conf$$.file
if ln -s conf$$.file conf$$ 2>/dev/null; then
  # We could just check for DJGPP; but this test a) works b) is more generic
  # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
  if test -f conf$$.exe; then
    # Don't use ln at all; we don't have any links
    as_ln_s='cp -p'
  else
    as_ln_s='ln -s'
  fi
elif ln conf$$.file conf$$ 2>/dev/null; then
  as_ln_s=ln
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.file

if mkdir -p . 2>/dev/null; then
  as_mkdir_p=:
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_executable_p="test -f"

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


# IFS
# We need space, tab and new line, in precisely that order.
as_nl='
'
IFS=" 	$as_nl"

# CDPATH.
$as_unset CDPATH


SHELL=${CONFIG_SHELL-/bin/sh}

# How were we run?
at_cli_args="$@"

# Load the config file.
for at_file in atconfig atlocal
do
  test -r $at_file || continue
  . ./$at_file || { echo "$as_me: error: invalid content: $at_file" >&2
   { (exit 1); exit 1; }; }
done

# atconfig delivers paths relative to the directory the test suite is
# in, but the groups themselves are run in testsuite-dir/group-dir.
if test -n "$at_top_srcdir"; then
  builddir=../..
  for at_dir in srcdir top_srcdir top_builddir
  do
    at_val=`eval echo '${'at_$at_dir'}'`
    eval "$at_dir=\$at_val/../.."
  done
fi

# Not all shells have the 'times' builtin; the subshell is needed to make
# sure we discard the 'times: not found' message from the shell.
at_times_p=false
(times) >/dev/null 2>&1 && at_times_p=:

# CLI Arguments to pass to the debugging scripts.
at_debug_args=
# -e sets to true
at_errexit_p=false
# Shall we be verbose?
at_verbose=:
at_quiet=echo

# Shall we keep the debug scripts?  Must be `:' when the suite is
# run by a debug script, so that the script doesn't remove itself.
at_debug_p=false
# Display help message?
at_help_p=false
# List test groups?
at_list_p=false
# Test groups to run
at_groups=

# The directory we are in.
at_dir=`pwd`
# The directory the whole suite works in.
# Should be absolutely to let the user `cd' at will.
at_suite_dir=$at_dir/$as_me.dir
# The file containing the suite.
at_suite_log=$at_dir/$as_me.log
# The file containing the location of the last AT_CHECK.
at_check_line_file=$at_suite_dir/at-check-line
# The file containing the exit status of the last command.
at_status_file=$at_suite_dir/at-status
# The files containing the output of the tested commands.
at_stdout=$at_suite_dir/at-stdout
at_stder1=$at_suite_dir/at-stder1
at_stderr=$at_suite_dir/at-stderr
# The file containing dates.
at_times_file=$at_suite_dir/at-times

# List of the tested programs.
at_tested='cobc'
# List of the all the test groups.
at_groups_all=' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109'
# As many dots as there are digits in the last test group number.
# Used to normalize the test group numbers so that `ls' lists them in
# numerical order.
at_format='...'
# Description of all the test groups.
at_help_all='1;split-keys.at:1;SPLIT KEYS (ALTERNATE KEY);;
2;split-keys.at:53;SPLIT KEYS (ALTERNATE KEY - NOT YET);;
3;split-keys.at:107;SPLIT KEYS (RECORD KEY);;
4;split-keys.at:171;SPLIT KEYS (RECORD KEY - NOT YET);;
5;split-keys.at:238;SPLIT KEYS (START Syntax - EQUAL);;
6;split-keys.at:302;SPLIT KEYS (START Syntax - EQUAL - NOT YET);;
7;split-keys.at:369;SPLIT KEYS (START Syntax - GREATER THAN);;
8;split-keys.at:433;SPLIT KEYS (START Syntax - GREATER THAN - NOT YET);;
9;split-keys.at:500;SPLIT KEYS (key unmatch);;
10;compat-check.at:1;DIV/MUL ORDER;;
11;compat-check.at:33;GO TO escape SECTION;;
12;compat-check.at:85;jp-comat - X Literal;;
13;compat-check.at:105;jp-compat NX Literal;;
14;copy-leading-trailing.at:1;COPY REPLACING LEADING;copy;
15;copy-leading-trailing.at:26;COPY REPLACING TRAILING;copy;
16;copy-leading-trailing.at:51;COPY REPLACING LEADING TRAILING;copy;
17;end-program-wrong.at:1;Allow wrong pgm-name in END-PROGRAM;;
18;evaluate-also-missing.at:1;Allow missing ALSO in EVALUATE-WHEN;;
19;evaluate-also-missing.at:25;Allow missing both ALSO and class condition IS in EVALUATE;;
20;empty-imperative.at:1;Allow empty EVALUATE-WHEN OTHER;;
21;empty-imperative.at:24;Allow empty ELSE;;
22;empty-imperative.at:46;Empty IF by unsupported stmt;;
23;empty-imperative.at:64;Allow empty EVALUATE- before WHEN OTHER;;
24;empty-imperative.at:88;Allow empty EVALUATE- semantics;;
25;empty-imperative.at:111;Allow empty EVALUATE- semantics 2;;
26;empty-imperative.at:136;Allow empty EVALUATE- semantics 3;;
27;spl-registers.at:1;PROGRAM-STATUS;;
28;spl-registers.at:16;SORT-STATUS (alias SORT-RETURN);;
29;spl-registers.at:32;SORT-STATUS (Break in input section);;
30;spl-registers.at:96;SORT-STATUS (Break in output section);;
31;spl-registers.at:160;SORT-STATUS (Break in section with THRU);;
32;spl-registers.at:228;SORT-STATUS break in MERGE;;
33;spl-registers.at:288;SORT-STATUS break with No SORT-STATUS in pgm;;
34;special-names.at:1;ACCEPT ARGUMENT-NUMBER;;
35;special-names.at:24;ACCEPT ARGUMENT-VALUE;;
36;special-names.at:48;ACCEPT ENVIRONMENT-VALUE;;
37;special-names.at:72;DISPLAY ARGUMENT-NUMBER;;
38;special-names.at:96;DISPLAY ENVIRONMENT-NAME;;
39;special-names.at:120;DISPLAY ENVIRONMENT-VALUE;;
40;special-names.at:148;SPECIAL NAMES unterminated;;
41;intr-funcs.at:1;FUNCTION LENG (fixed);;
42;intr-funcs.at:21;FUNCTION LENG (occur. depending);;
43;intr-funcs.at:44;FUNCTION LENGTH-AN (fixed);;
44;intr-funcs.at:64;FUNCTION LENGTH-AN (occur. depending);;
45;file-control.at:1;Allow no file open (I-O, SEQUENTIAL);;
46;file-control.at:32;Allow no file open (I-O, LINE SEQ);;
47;file-control.at:63;Allow no file open (I-O, RELATIVE);;
48;file-control.at:96;Allow no file open (I-O, INDEXED);;
49;file-control.at:129;Allow no file open (EXTEND, SEQUENTIAL);;
50;file-control.at:160;Allow no file open (EXTEND, LINE SEQ);;
51;file-control.at:191;Allow no file open (EXTEND, RELATIVE);;
52;file-control.at:224;Allow no file open (EXTEND, INDEXED);;
53;file-control.at:257;Allow file delete (SEQUENTIAL);;
54;file-control.at:289;Allow file delete (LINE SEQ);;
55;file-control.at:321;Allow file delete (RELATIVE);;
56;file-control.at:355;Allow file delete (INDEXED);;
57;file-control.at:391;Allow file delete (INDEXED) - not available;;
58;file-control.at:427;Assume REWRITE for WRITE on OPEN I-O;;
59;file-control.at:457;READ/WRITE INVALID KEY on SEQUENTIAL;;
60;file-control.at:492;NOMINAL KEY (PENDING);;
61;file-control.at:520;ASSIGN TO multiple Devs. (PENDING);;
62;file-control.at:545;ASSIGN TO multiple Devs. (PENDING);;
63;file-control.at:568;ignore SELECT RESERVE 'NO';;
64;file-userfh.at:1;USERFH - READ LOCK - so;;
65;file-userfh.at:48;USERFH - READ LOCK - dll;;
66;copy-joining.at:1;COPY JOINING AS PREFIX;copy;
67;copy-joining.at:25;COPY JOINING AS SUFFIX;copy;
68;copy-joining.at:49;JOINING in RECURSIVE COPY;copy;
69;copy-joining.at:77;JOINed in REDEFINES clause;copy;
70;copy-joining.at:102;COPY JOINING EXISTING NAME;;
71;copy-joining.at:127;COPY JOINING Group fields;;
72;copy-joining.at:154;*NO* JOINING following JOINING ;;
73;copy-joining.at:184;*NO* JOINING FILLER;;
74;assign-devicename.at:1;ASSIGN coded device name;;
75;assign-devicename.at:30;ASSIGN coded device w/o def.name;;
76;assign-devicename.at:59;ASSIGN coded device name by env.var;;
77;assign-devicename.at:88;ASSIGN coded device w/o def.name by env.var;;
78;job-date.at:1;COB_DATE;;
79;job-date.at:25;COB_DATE YYYYMMDD;;
80;job-date.at:48;COB_DATE DAY;;
81;job-date.at:70;COB_DATE DAY YYYYDDD;;
82;job-date.at:92;COB_DATE FUNC. CURRENT-DATE;;
83;job-date.at:116;COB_DATE FUNC. CURRENT-DATE of time;;
84;nibble-c-for-unsigned.at:1;Decimal nibble C as unsigned;;
85;upsi-x.at:1;UPSI-x;;
86;cob68-copy.at:1;COBOL68 COPY;;
87;cob68-copy.at:25;COBOL68 COPY nested;;
88;cob68-copy.at:53;COBOL68 COPY nested fragments;;
89;cob68-copy.at:81;COBOL68 COPY nested w/ normal;;
90;cob68-copy.at:109;COBOL68 COPY nested w/ normal 2;;
91;switch-no-mnemonic.at:1;SWITCH-x with no mnemonic name;;
92;data-desc-no-dot.at:1;Data description unterminated;;
93;data-desc-no-dot.at:20;Data desc. ambiguous level-num 1;;
94;data-desc-no-dot.at:39;Data desc. ambiguous level-num 2;;
95;data-desc-no-dot.at:59;Data desc. level-num error after 88;;
96;data-desc-no-dot.at:83;Data desc. ambiguous level-num (degrade check);;
97;sort-key-is.at:1;SORT KEY IS;;
98;search-key-in-rhs.at:1;SEARCH KEY IN RHS;;
99;verbose-runtime.at:1;COB_VERBOSE file sort;;
100;occurs-param-order.at:1;OCCURS INDEXED before KEY;;
101;io-control.at:1;I-O-CONTROL clauses unterminated;;
102;io-control.at:27;APPLY Clauses (not supported);;
103;greater-less-than-equal.at:1;GREATER/LESS THAN (implicit 'OR') EQUAL;;
104;file-desc.at:1;ignore invalid (too short) RECORD CONTAINS ;;
105;file-desc.at:32;ignore invalid (too large) RECORD CONTAINS ;;
106;abort-on-file-error.at:1;Abort option (default) on non-fatal f-status;;
107;abort-on-file-error.at:35;Abort option (fatal) on non-fatal f-status;;
108;abort-on-file-error.at:69;Abort option (default) on fatal f-status;;
109;abort-on-file-error.at:100;Abort option (fatal) on fatal file status;;
110;system-routine.at:1;CALL C$CALLEDBY;;
'

at_keywords=
at_prev=
for at_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$at_prev"; then
    at_option=$at_prev=$at_option
    at_prev=
  fi

  at_optarg=`expr "x$at_option" : 'x[^=]*=\(.*\)'`

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $at_option in
    --help | -h )
	at_help_p=:
	;;

    --list | -l )
	at_list_p=:
	;;

    --version | -V )
	echo "$as_me (OpenCOBOL 1.1)"
	exit 0
	;;

    --clean | -c )
	rm -rf $at_suite_dir $at_suite_log
	exit 0
	;;

    --debug | -d )
	at_debug_p=:
	;;

    --errexit | -e )
	at_debug_p=:
	at_errexit_p=:
	;;

    --verbose | -v )
	at_verbose=echo; at_quiet=:
	;;

    --trace | -x )
	at_traceon='set -vx'; at_traceoff='set +vx'
	;;

    [0-9] | [0-9][0-9] | [0-9][0-9][0-9] | [0-9][0-9][0-9][0-9])
	at_groups="$at_groups$at_option "
	;;

    # Ranges
    [0-9]- | [0-9][0-9]- | [0-9][0-9][0-9]- | [0-9][0-9][0-9][0-9]-)
	at_range_start=`echo $at_option |tr -d '-'`
	at_range=`echo " $at_groups_all " | \
	  sed -e 's,^.* '$at_range_start' ,'$at_range_start' ,'`
	at_groups="$at_groups$at_range "
	;;

    -[0-9] | -[0-9][0-9] | -[0-9][0-9][0-9] | -[0-9][0-9][0-9][0-9])
	at_range_end=`echo $at_option |tr -d '-'`
	at_range=`echo " $at_groups_all " | \
	  sed -e 's, '$at_range_end' .*$, '$at_range_end','`
	at_groups="$at_groups$at_range "
	;;

    [0-9]-[0-9] | [0-9]-[0-9][0-9] | [0-9]-[0-9][0-9][0-9] | \
    [0-9]-[0-9][0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9] | \
    [0-9][0-9]-[0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] )
	at_range_start=`echo $at_option |sed 's,-.*,,'`
	at_range_end=`echo $at_option |sed 's,.*-,,'`
	# FIXME: Maybe test to make sure start <= end?
	at_range=`echo " $at_groups_all " | \
	  sed -e 's,^.* '$at_range_start' ,'$at_range_start' ,' \
	      -e 's, '$at_range_end' .*$, '$at_range_end','`
	at_groups="$at_groups$at_range "
	;;

    # Keywords.
    --keywords | -k )
	at_prev=--keywords
	;;
    --keywords=* )
	at_keywords="$at_keywords,$at_optarg"
	;;

    *=*)
  	at_envvar=`expr "x$at_option" : 'x\([^=]*\)='`
  	# Reject names that are not valid shell variable names.
  	expr "x$at_envvar" : ".*[^_$as_cr_alnum]" >/dev/null &&
  	  { echo "$as_me: error: invalid variable name: $at_envvar" >&2
   { (exit 1); exit 1; }; }
  	at_value=`echo "$at_optarg" | sed "s/'/'\\\\\\\\''/g"`
  	eval "$at_envvar='$at_value'"
  	export $at_envvar
	# Propagate to debug scripts.
  	at_debug_args="$at_debug_args $at_option"
  	;;

     *) echo "$as_me: invalid option: $at_option" >&2
	echo "Try \`$0 --help' for more information." >&2
	exit 1
	;;
  esac
done

# Process the --keywords
if test -n "$at_keywords"; then
  at_groups_selected=$at_help_all
  for at_keyword in `IFS=,; set X $at_keywords; shift; echo ${1+$@}`
  do
    # It is on purpose that we match the test group titles too.
    at_groups_selected=`echo "$at_groups_selected" |
			grep -i "^[^;]*;[^;]*.*[; ]$at_keyword[ ;]"`
  done
  at_groups_selected=`echo "$at_groups_selected" | sed 's/;.*//'`
  # Smash the end of lines.
  at_groups_selected=`echo $at_groups_selected`
  at_groups="$at_groups$at_groups_selected "
fi

# Selected test groups.
test -z "$at_groups" && at_groups=$at_groups_all

# Help message.
if $at_help_p; then
  cat <<_ATEOF
Usage: $0 [OPTION]... [VARIABLE=VALUE]... [TESTS]

Run all the tests, or the selected TESTS, and save a detailed log file.
Upon failure, create debugging scripts.

You should not change environment variables unless explicitly passed
as command line arguments.  Set \`AUTOTEST_PATH' to select the executables
to exercise.  Each relative directory is expanded as build and source
directories relatively to the top level of this distribution.  E.g.,

  $ $0 AUTOTEST_PATH=bin

possibly amounts into

  PATH=/tmp/foo-1.0/bin:/src/foo-1.0/bin:\$PATH
_ATEOF
cat <<_ATEOF

Operation modes:
  -h, --help     print the help message, then exit
  -V, --version  print version number, then exit
  -c, --clean    remove all the files this test suite might create and exit
  -l, --list     describes all the tests, or the selected TESTS
_ATEOF
cat <<_ATEOF

Execution tuning:
  -k, --keywords=KEYWORDS
	         select the tests matching all the comma separated KEYWORDS
	         accumulates
  -e, --errexit  abort as soon as a test fails; implies --debug
  -v, --verbose  force more detailed output
	         default for debugging scripts
  -d, --debug    inhibit clean up and debug script creation
	         default for debugging scripts
  -x, --trace    enable tests shell tracing
_ATEOF
cat <<_ATEOF

Report bugs to <open-cobol-list@lists.sourceforge.net>.
_ATEOF
  exit 0
fi

# List of tests.
if $at_list_p; then
  cat <<_ATEOF
OpenCOBOL 1.1 test suite: JP products compatibility test groups:

 NUM: FILENAME:LINE      TEST-GROUP-NAME
      KEYWORDS

_ATEOF
  # "  1 42  45 " => "^(1|42|45);".
  at_groups_pattern=`echo "$at_groups" | sed 's/^  *//;s/  *$//;s/  */|/g'`
  echo "$at_help_all" |
    awk 'BEGIN { FS = ";" }
	 { if ($1 !~ /^('"$at_groups_pattern"')$/) next }
	 { if ($1) printf " %3d: %-18s %s\n", $1, $2, $3
	   if ($4) printf "      %s\n", $4 } '
  exit 0
fi

# Don't take risks: use only absolute directories in PATH.
#
# For stand-alone test suites, AUTOTEST_PATH is relative to `.'.
#
# For embedded test suites, AUTOTEST_PATH is relative to the top level
# of the package.  Then expand it into build/src parts, since users
# may create executables in both places.
#
# There might be directories that don't exist, but don't redirect
# builtins' (eg., cd) stderr directly: Ultrix's sh hates that.
AUTOTEST_PATH=`echo $AUTOTEST_PATH | tr ':' $PATH_SEPARATOR`
at_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $AUTOTEST_PATH $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  case $as_dir in
  [\\/]* | ?:[\\/]* )
    at_path=$at_path$PATH_SEPARATOR$as_dir
    ;;
  * )
    if test -z "$at_top_builddir"; then
      # Stand-alone test suite.
      at_path=$at_path$PATH_SEPARATOR$as_dir
    else
      # Embedded test suite.
      at_path=$at_path$PATH_SEPARATOR$at_top_builddir/$as_dir
      at_path=$at_path$PATH_SEPARATOR$at_top_srcdir/$as_dir
    fi
    ;;
esac
done


# Now build and simplify PATH.
PATH=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $at_path
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  as_dir=`(cd "$as_dir" && pwd) 2>/dev/null`
test -d "$as_dir" || continue
case $PATH in
	          $as_dir                 | \
	          $as_dir$PATH_SEPARATOR* | \
  *$PATH_SEPARATOR$as_dir                 | \
  *$PATH_SEPARATOR$as_dir$PATH_SEPARATOR* ) ;;

  '') PATH=$as_dir ;;
   *) PATH=$PATH$PATH_SEPARATOR$as_dir ;;
esac
done

export PATH

# Setting up the FDs.
# 5 is the log file.  Not to be overwritten if `-d'.

$at_debug_p && at_suite_log=/dev/null
exec 5>$at_suite_log

# Banners and logs.
cat <<\_ASBOX
## ---------------------------------------------------- ##
## OpenCOBOL 1.1 test suite: JP products compatibility. ##
## ---------------------------------------------------- ##
_ASBOX
{
  cat <<\_ASBOX
## ---------------------------------------------------- ##
## OpenCOBOL 1.1 test suite: JP products compatibility. ##
## ---------------------------------------------------- ##
_ASBOX
  echo

  echo "$as_me: command line was:"
  echo "  $ $0 $at_cli_args"
  echo

  # Try to find a few ChangeLogs in case it might help determining the
  # exact version.  Use the relative dir: if the top dir is a symlink,
  # find will not follow it (and options to follow the links are not
  # portable), which would result in no output here.
  if test -n "$at_top_srcdir"; then
    cat <<\_ASBOX
## ----------- ##
## ChangeLogs. ##
## ----------- ##
_ASBOX
    echo
    for at_file in `find "$at_top_srcdir" -name ChangeLog -print`
    do
      echo "$as_me: $at_file:"
      sed 's/^/| /;10q' $at_file
      echo
    done

    {
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
hostinfo               = `(hostinfo) 2>/dev/null               || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  echo "PATH: $as_dir"
done

}
    echo
  fi

  # Contents of the config files.
  for at_file in atconfig atlocal
  do
    test -r $at_file || continue
    echo "$as_me: $at_file:"
    sed 's/^/| /' $at_file
    echo
  done

  cat <<\_ASBOX
## ---------------- ##
## Tested programs. ##
## ---------------- ##
_ASBOX
  echo
} >&5

# Report what programs are being tested.
for at_program in : $at_tested
do
  test "$at_program" = : && continue
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -f $as_dir/$at_program && break
done

  if test -f $as_dir/$at_program; then
    {
      echo "jp-compat.at:21: $as_dir/$at_program --version"
      $as_dir/$at_program --version
      echo
    } >&5 2>&1
  else
    { { echo "$as_me:$LINENO: error: cannot find $at_program" >&5
echo "$as_me: error: cannot find $at_program" >&2;}
   { (exit 1); exit 1; }; }
  fi
done

{
  cat <<\_ASBOX
## ------------------ ##
## Running the tests. ##
## ------------------ ##
_ASBOX
} >&5

at_start_date=`date`
at_start_time=`(date +%s) 2>/dev/null`
echo "$as_me: starting at: $at_start_date" >&5
at_xpass_list=
at_xfail_list=
at_pass_list=
at_fail_list=
at_skip_list=
at_group_count=0

# Create the master directory if it doesn't already exist.
test -d $at_suite_dir ||
  mkdir $at_suite_dir ||
  { { echo "$as_me:$LINENO: error: cannot create $at_suite_dir" >&5
echo "$as_me: error: cannot create $at_suite_dir" >&2;}
   { (exit 1); exit 1; }; }

# Can we diff with `/dev/null'?  DU 5.0 refuses.
if diff /dev/null /dev/null >/dev/null 2>&1; then
  at_devnull=/dev/null
else
  at_devnull=$at_suite_dir/devnull
  cp /dev/null $at_devnull
fi

# Use `diff -u' when possible.
if diff -u $at_devnull $at_devnull >/dev/null 2>&1; then
  at_diff='diff -u'
else
  at_diff=diff
fi


for at_group in $at_groups
do
  # Be sure to come back to the top test directory.
  cd $at_suite_dir

  case $at_group in
    banner-*)
      at_group_log=$at_suite_log
      ;;

    *)
      # Skip tests we already run (using --keywords makes it easy to get
      # duplication).
      case " $at_pass_test $at_skip_test $at_fail_test " in
	*" $at_group "* ) continue;;
      esac

      # Normalize the test group number.
      at_group_normalized=`expr "00000$at_group" : ".*\($at_format\)"`

      # Create a fresh directory for the next test group, and enter.
      at_group_dir=$at_suite_dir/$at_group_normalized
      at_group_log=$at_group_dir/$as_me.log
      rm -rf $at_group_dir
      mkdir $at_group_dir ||
	{ { echo "$as_me:$LINENO: error: cannot create $at_group_dir" >&5
echo "$as_me: error: cannot create $at_group_dir" >&2;}
   { (exit 1); exit 1; }; }
      cd $at_group_dir
      ;;
  esac

  echo 0 > $at_status_file

  # Clearly separate the test groups when verbose.
  test $at_group_count != 0 && $at_verbose

  # In verbose mode, append to the log file *and* show on
  # the standard output; in quiet mode only write to the log
  if test $at_verbose = echo; then
    at_tee_pipe="tee -a $at_group_log"
  else
    at_tee_pipe="cat >> $at_group_log"
  fi

  case $at_group in
  1 ) # 1. split-keys.at:1: SPLIT KEYS (ALTERNATE KEY)
    at_setup_line='split-keys.at:1'
    at_desc='SPLIT KEYS (ALTERNATE KEY)'
    $at_quiet $ECHO_N "  1: SPLIT KEYS (ALTERNATE KEY)                   $ECHO_C"
    at_xfail=no
    (
      echo "1. split-keys.at:1: testing ..."
      $at_traceon


$at_traceoff
echo "split-keys.at:3: test \$COB_SPLITKEY_FLAGS = \"yes\" || exit 77"
echo split-keys.at:3 >$at_check_line_file
( $at_traceon; test $COB_SPLITKEY_FLAGS = "yes" || exit 77 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:3: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  RANDOM
                        RECORD KEY   IS  TEST-KEY1
                        ALTERNATE RECORD KEY IS ALT-KEY1
                                                ALT-KEY2.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 ALT-KEY1   PIC X(4).
          03 ALT-KEY2   PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "AAAA" TO TEST-KEY1.
           MOVE "ALT1" TO  ALT-KEY1.
           MOVE "-001" TO  ALT-KEY2.
           WRITE TEST-REC.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "ALT2" TO  ALT-KEY1.
           MOVE "-002" TO  ALT-KEY2.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "ALT3" TO  ALT-KEY1.
           MOVE "-003" TO  ALT-KEY2.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "ALT2" TO  ALT-KEY1.
           MOVE "-002" TO  ALT-KEY2.
           READ  TEST-FILE KEY IS ALT-KEY1 ALT-KEY2.
           DISPLAY TEST-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "split-keys.at:48: \${COMPILE} -o prog prog.cob"
echo split-keys.at:48 >$at_check_line_file
( $at_traceon; ${COMPILE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:48: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "split-keys.at:49: ./prog"
echo split-keys.at:49 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "BBBB" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:49: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  2 ) # 2. split-keys.at:53: SPLIT KEYS (ALTERNATE KEY - NOT YET)
    at_setup_line='split-keys.at:53'
    at_desc='SPLIT KEYS (ALTERNATE KEY - NOT YET)'
    $at_quiet $ECHO_N "  2: SPLIT KEYS (ALTERNATE KEY - NOT YET)         $ECHO_C"
    at_xfail=no
    (
      echo "2. split-keys.at:53: testing ..."
      $at_traceon


$at_traceoff
echo "split-keys.at:55: test \$COB_SPLITKEY_FLAGS = \"no\" || exit 77"
echo split-keys.at:55 >$at_check_line_file
( $at_traceon; test $COB_SPLITKEY_FLAGS = "no" || exit 77 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:55: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  RANDOM
                        RECORD KEY   IS  TEST-KEY1
                        ALTERNATE RECORD KEY IS ALT-KEY1
                                                ALT-KEY2.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 ALT-KEY1   PIC X(4).
          03 ALT-KEY2   PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "AAAA" TO TEST-KEY1.
           MOVE "ALT1" TO  ALT-KEY1.
           MOVE "-001" TO  ALT-KEY2.
           WRITE TEST-REC.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "ALT2" TO  ALT-KEY1.
           MOVE "-002" TO  ALT-KEY2.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "ALT3" TO  ALT-KEY1.
           MOVE "-003" TO  ALT-KEY2.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "ALT2" TO  ALT-KEY1.
           MOVE "-002" TO  ALT-KEY2.
           READ  TEST-FILE KEY IS ALT-KEY1 ALT-KEY2.
           DISPLAY TEST-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "split-keys.at:100: \${COMPILE} -o prog prog.cob"
echo split-keys.at:100 >$at_check_line_file
( $at_traceon; ${COMPILE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:12: Warning: 'SPLIT KEYS' not implemented
prog.cob:38: Warning: 'SPLIT KEYS' not implemented
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:100: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  3 ) # 3. split-keys.at:107: SPLIT KEYS (RECORD KEY)
    at_setup_line='split-keys.at:107'
    at_desc='SPLIT KEYS (RECORD KEY)'
    $at_quiet $ECHO_N "  3: SPLIT KEYS (RECORD KEY)                      $ECHO_C"
    at_xfail=no
    (
      echo "3. split-keys.at:107: testing ..."
      $at_traceon


$at_traceoff
echo "split-keys.at:109: test \$COB_SPLITKEY_FLAGS = \"yes\" || exit 77"
echo split-keys.at:109 >$at_check_line_file
( $at_traceon; test $COB_SPLITKEY_FLAGS = "yes" || exit 77 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:109: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  RANDOM
                        RECORD KEY   IS  TEST-KEY1
                                         TEST-KEY2
                        ALTERNATE RECORD KEY IS ALT-KEY1.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 ALT-KEY1   PIC X(4).
          03 TEST-KEY2  PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "0001" TO TEST-KEY2.
           MOVE "ALT1" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "0002" TO TEST-KEY2.
           MOVE "ALT2" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "0003" TO TEST-KEY2.
           MOVE "ALT3" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "0001" TO TEST-KEY2.
           MOVE "ALT4" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "0002" TO TEST-KEY2.
           MOVE "ALT5" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "0003" TO TEST-KEY2.
           MOVE "ALT6" TO  ALT-KEY1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "BBBB" TO  TEST-KEY1.
           MOVE "0002" TO  TEST-KEY2.
           READ  TEST-FILE KEY IS TEST-KEY1 TEST-KEY2.
           DISPLAY ALT-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "split-keys.at:166: \${COMPILE} -o prog prog.cob"
echo split-keys.at:166 >$at_check_line_file
( $at_traceon; ${COMPILE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:166: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "split-keys.at:167: ./prog"
echo split-keys.at:167 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "ALT2" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:167: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  4 ) # 4. split-keys.at:171: SPLIT KEYS (RECORD KEY - NOT YET)
    at_setup_line='split-keys.at:171'
    at_desc='SPLIT KEYS (RECORD KEY - NOT YET)'
    $at_quiet $ECHO_N "  4: SPLIT KEYS (RECORD KEY - NOT YET)            $ECHO_C"
    at_xfail=no
    (
      echo "4. split-keys.at:171: testing ..."
      $at_traceon


$at_traceoff
echo "split-keys.at:173: test \$COB_SPLITKEY_FLAGS = \"no\" || exit 77"
echo split-keys.at:173 >$at_check_line_file
( $at_traceon; test $COB_SPLITKEY_FLAGS = "no" || exit 77 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:173: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  RANDOM
                        RECORD KEY   IS  TEST-KEY1
                                         TEST-KEY2
                        ALTERNATE RECORD KEY IS ALT-KEY1.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 ALT-KEY1   PIC X(4).
          03 TEST-KEY2  PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "0001" TO TEST-KEY2.
           MOVE "ALT1" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "0002" TO TEST-KEY2.
           MOVE "ALT2" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "0003" TO TEST-KEY2.
           MOVE "ALT3" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "0001" TO TEST-KEY2.
           MOVE "ALT4" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "0002" TO TEST-KEY2.
           MOVE "ALT5" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "0003" TO TEST-KEY2.
           MOVE "ALT6" TO  ALT-KEY1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "BBBB" TO  TEST-KEY1.
           MOVE "0002" TO  TEST-KEY2.
           READ  TEST-FILE KEY IS TEST-KEY1 TEST-KEY2.
           DISPLAY ALT-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "split-keys.at:230: \${COMPILE} -o prog prog.cob"
echo split-keys.at:230 >$at_check_line_file
( $at_traceon; ${COMPILE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:12: Warning: 'SPLIT KEYS' not implemented
prog.cob:7: Error: RECORD KEY clause is required for file 'TEST-FILE'
prog.cob:50: Warning: 'SPLIT KEYS' not implemented
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "split-keys.at:230: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  5 ) # 5. split-keys.at:238: SPLIT KEYS (START Syntax - EQUAL)
    at_setup_line='split-keys.at:238'
    at_desc='SPLIT KEYS (START Syntax - EQUAL)'
    $at_quiet $ECHO_N "  5: SPLIT KEYS (START Syntax - EQUAL)            $ECHO_C"
    at_xfail=no
    (
      echo "5. split-keys.at:238: testing ..."
      $at_traceon


$at_traceoff
echo "split-keys.at:240: test \$COB_SPLITKEY_FLAGS = \"yes\" || exit 77"
echo split-keys.at:240 >$at_check_line_file
( $at_traceon; test $COB_SPLITKEY_FLAGS = "yes" || exit 77 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:240: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  SEQUENTIAL
                        RECORD KEY   IS  TEST-KEY1 TEST-KEY2
                        ALTERNATE RECORD KEY IS ALT-KEY1.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 TEST-KEY2  PIC X(4).
          03 ALT-KEY1   PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT1" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT2" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT3" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT4" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT5" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT6" TO  ALT-KEY1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           START TEST-FILE KEY IS EQUAL TO TEST-KEY1 TEST-KEY2.
           READ  TEST-FILE NEXT.
           DISPLAY ALT-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "split-keys.at:297: \${COMPILE} -o prog prog.cob"
echo split-keys.at:297 >$at_check_line_file
( $at_traceon; ${COMPILE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:297: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "split-keys.at:298: ./prog"
echo split-keys.at:298 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "ALT2" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:298: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  6 ) # 6. split-keys.at:302: SPLIT KEYS (START Syntax - EQUAL - NOT YET)
    at_setup_line='split-keys.at:302'
    at_desc='SPLIT KEYS (START Syntax - EQUAL - NOT YET)'
    $at_quiet $ECHO_N "  6: SPLIT KEYS (START Syntax - EQUAL - NOT YET)  $ECHO_C"
    at_xfail=no
    (
      echo "6. split-keys.at:302: testing ..."
      $at_traceon


$at_traceoff
echo "split-keys.at:304: test \$COB_SPLITKEY_FLAGS = \"no\" || exit 77"
echo split-keys.at:304 >$at_check_line_file
( $at_traceon; test $COB_SPLITKEY_FLAGS = "no" || exit 77 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:304: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  SEQUENTIAL
                        RECORD KEY   IS  TEST-KEY1 TEST-KEY2
                        ALTERNATE RECORD KEY IS ALT-KEY1.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 TEST-KEY2  PIC X(4).
          03 ALT-KEY1   PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT1" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT2" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT3" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT4" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT5" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT6" TO  ALT-KEY1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           START TEST-FILE KEY IS EQUAL TO TEST-KEY1 TEST-KEY2.
           READ  TEST-FILE NEXT.
           DISPLAY ALT-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "split-keys.at:361: \${COMPILE} -o prog prog.cob"
echo split-keys.at:361 >$at_check_line_file
( $at_traceon; ${COMPILE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:11: Warning: 'SPLIT KEYS' not implemented
prog.cob:7: Error: RECORD KEY clause is required for file 'TEST-FILE'
prog.cob:49: Warning: 'SPLIT KEYS' not implemented
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "split-keys.at:361: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  7 ) # 7. split-keys.at:369: SPLIT KEYS (START Syntax - GREATER THAN)
    at_setup_line='split-keys.at:369'
    at_desc='SPLIT KEYS (START Syntax - GREATER THAN)'
    $at_quiet $ECHO_N "  7: SPLIT KEYS (START Syntax - GREATER THAN)     $ECHO_C"
    at_xfail=no
    (
      echo "7. split-keys.at:369: testing ..."
      $at_traceon


$at_traceoff
echo "split-keys.at:371: test \$COB_SPLITKEY_FLAGS = \"yes\" || exit 77"
echo split-keys.at:371 >$at_check_line_file
( $at_traceon; test $COB_SPLITKEY_FLAGS = "yes" || exit 77 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:371: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  SEQUENTIAL
                        RECORD KEY   IS  TEST-KEY1 TEST-KEY2
                        ALTERNATE RECORD KEY IS ALT-KEY1.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 TEST-KEY2  PIC X(4).
          03 ALT-KEY1   PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT1" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT2" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT3" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT4" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT5" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT6" TO  ALT-KEY1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           START TEST-FILE KEY IS GREATER THAN TEST-KEY1 TEST-KEY2.
           READ  TEST-FILE NEXT.
           DISPLAY ALT-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "split-keys.at:428: \${COMPILE} -o prog prog.cob"
echo split-keys.at:428 >$at_check_line_file
( $at_traceon; ${COMPILE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:428: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "split-keys.at:429: ./prog"
echo split-keys.at:429 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "ALT3" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:429: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  8 ) # 8. split-keys.at:433: SPLIT KEYS (START Syntax - GREATER THAN - NOT YET)
    at_setup_line='split-keys.at:433'
    at_desc='SPLIT KEYS (START Syntax - GREATER THAN - NOT YET)'
    $at_quiet $ECHO_N "  8: SPLIT KEYS (START Syntax - GREATER THAN - NOT YET)$ECHO_C"
    at_xfail=no
    (
      echo "8. split-keys.at:433: testing ..."
      $at_traceon


$at_traceoff
echo "split-keys.at:435: test \$COB_SPLITKEY_FLAGS = \"no\" || exit 77"
echo split-keys.at:435 >$at_check_line_file
( $at_traceon; test $COB_SPLITKEY_FLAGS = "no" || exit 77 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:435: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  SEQUENTIAL
                        RECORD KEY   IS  TEST-KEY1 TEST-KEY2
                        ALTERNATE RECORD KEY IS ALT-KEY1.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 TEST-KEY2  PIC X(4).
          03 ALT-KEY1   PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT1" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT2" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT3" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT4" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT5" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT6" TO  ALT-KEY1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           START TEST-FILE KEY IS GREATER THAN TEST-KEY1 TEST-KEY2.
           READ  TEST-FILE NEXT.
           DISPLAY ALT-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "split-keys.at:492: \${COMPILE} -o prog prog.cob"
echo split-keys.at:492 >$at_check_line_file
( $at_traceon; ${COMPILE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:11: Warning: 'SPLIT KEYS' not implemented
prog.cob:7: Error: RECORD KEY clause is required for file 'TEST-FILE'
prog.cob:49: Warning: 'SPLIT KEYS' not implemented
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "split-keys.at:492: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  9 ) # 9. split-keys.at:500: SPLIT KEYS (key unmatch)
    at_setup_line='split-keys.at:500'
    at_desc='SPLIT KEYS (key unmatch)'
    $at_quiet $ECHO_N "  9: SPLIT KEYS (key unmatch)                     $ECHO_C"
    at_xfail=no
    (
      echo "9. split-keys.at:500: testing ..."
      $at_traceon


$at_traceoff
echo "split-keys.at:502: test \$COB_SPLITKEY_FLAGS = \"yes\" || exit 77"
echo split-keys.at:502 >$at_check_line_file
( $at_traceon; test $COB_SPLITKEY_FLAGS = "yes" || exit 77 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "split-keys.at:502: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  SEQUENTIAL
                        RECORD KEY   IS  TEST-KEY1 TEST-KEY2
                        ALTERNATE RECORD KEY IS ALT-KEY1.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 TEST-KEY2  PIC X(4).
          03 ALT-KEY1   PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT1" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT2" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT3" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT4" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT5" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT6" TO  ALT-KEY1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           START TEST-FILE KEY IS EQUAL TO  TEST-KEY2 TEST-KEY1.
           READ  TEST-FILE NEXT.
           DISPLAY ALT-KEY1 NO ADVANCING.
           READ  TEST-FILE.
           DISPLAY ALT-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "split-keys.at:561: \${COMPILE} -o prog prog.cob"
echo split-keys.at:561 >$at_check_line_file
( $at_traceon; ${COMPILE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:49: Error: Undefined compound keys
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "split-keys.at:561: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  10 ) # 10. compat-check.at:1: DIV/MUL ORDER
    at_setup_line='compat-check.at:1'
    at_desc='DIV/MUL ORDER'
    $at_quiet $ECHO_N " 10: DIV/MUL ORDER                                $ECHO_C"
    at_xfail=no
    (
      echo "10. compat-check.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 X             PIC 99v999.
       PROCEDURE        DIVISION.
           COMPUTE X = 1 / 3 * 5.      *>WARN
           COMPUTE X = 1 * 3 / 5.      *>NO WARN
           COMPUTE X = 9 / 1 / 3 * 5.  *>WARN
           COMPUTE X = 1 / 3 * 5 * 9.  *>WARN
           COMPUTE X = 1 / 3 + 9 * 5.  *>NO WARN
           COMPUTE X = 9 + 1 / 3 * 5.  *>WARN
           COMPUTE X = 1 / 3 * 5 + 9.  *>WARN
           COMPUTE X = 1 / 3 * 5 + 2 / 6 * 10.  *>WARN TWICE
           GOBACK.
_ATEOF


$at_traceoff
echo "compat-check.at:21: \${COMPILE_JP_COMPAT} -Wcompat prog.cob"
echo compat-check.at:21 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -Wcompat prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:8: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:10: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:11: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:13: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:14: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:15: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:15: Warning: MUL operation after DIV can cause the precision issue.
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "compat-check.at:21: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  11 ) # 11. compat-check.at:33: GO TO escape SECTION
    at_setup_line='compat-check.at:33'
    at_desc='GO TO escape SECTION'
    $at_quiet $ECHO_N " 11: GO TO escape SECTION                         $ECHO_C"
    at_xfail=no
    (
      echo "11. compat-check.at:33: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 TBLS.
         02 TBLA OCCURS 2 TIMES
            ASCENDING KEY IS FK
            INDEXED BY       IX.
            03 FK PIC 9.
            03 FV PIC 9.
       PROCEDURE        DIVISION.
       S-SRC        SECTION.
       S1.
           GO TO S2.
       S2.
           GO TO D1.
           IF 1 = 1 THEN GO TO D2.
           SEARCH ALL TBLA WHEN FK(IX) = 1 GO TO D2.
           CALL "NONE"
             ON EXCEPTION GO TO D1
             NOT ON EXCEPTION GO TO D2.
           PERFORM UNTIL 1 = 1 GO TO D1 END-PERFORM.
       S3.
           GO TO D1.
           GO TO D2.
           NEXT SENTENCE.
       S-DST        SECTION.
       D1.
       D2.
           GOBACK.
_ATEOF


$at_traceoff
echo "compat-check.at:68: \${COMPILE_JP_COMPAT} -Wcompat prog.cob"
echo compat-check.at:68 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -Wcompat prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob: In paragraph 'S3':
prog.cob:27: Warning: NEXT SENTENCE is archaic in jp-compat
prog.cob: In paragraph 'S2':
prog.cob:17: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:18: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:19: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:21: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:22: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:23: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob: In paragraph 'S3':
prog.cob:25: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:26: Warning: GO TO escape from SECTION S-SRC to S-DST
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "compat-check.at:68: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  12 ) # 12. compat-check.at:85: jp-comat - X Literal
    at_setup_line='compat-check.at:85'
    at_desc='jp-comat - X Literal'
    $at_quiet $ECHO_N " 12: jp-comat - X Literal                         $ECHO_C"
    at_xfail=no
    (
      echo "12. compat-check.at:85: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 X             PIC X(2) VALUE X'CEB1'.
       PROCEDURE        DIVISION.
           MOVE  X'CEB2' TO X.
           GOBACK.
_ATEOF


$at_traceoff
echo "compat-check.at:98: \${COMPILE_JP_COMPAT} -Wcompat prog.cob"
echo compat-check.at:98 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -Wcompat prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:6: Warning: X Binary literal found.
prog.cob:8: Warning: X Binary literal found.
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "compat-check.at:98: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  13 ) # 13. compat-check.at:105: jp-compat NX Literal
    at_setup_line='compat-check.at:105'
    at_desc='jp-compat NX Literal'
    $at_quiet $ECHO_N " 13: jp-compat NX Literal                         $ECHO_C"
    at_xfail=no
    (
      echo "13. compat-check.at:105: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 X             PIC N(1) VALUE NX'CEB1'.
       PROCEDURE        DIVISION.
           MOVE  NX'CEB2' TO X.
           GOBACK.
_ATEOF


$at_traceoff
echo "compat-check.at:118: \${COMPILE_JP_COMPAT} -Wcompat prog.cob"
echo compat-check.at:118 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -Wcompat prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:6: Warning: NX Binary literal found.
prog.cob:8: Warning: NX Binary literal found.
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "compat-check.at:118: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  14 ) # 14. copy-leading-trailing.at:1: COPY REPLACING LEADING
    at_setup_line='copy-leading-trailing.at:1'
    at_desc='COPY REPLACING LEADING'
    $at_quiet $ECHO_N " 14: COPY REPLACING LEADING                       $ECHO_C"
    at_xfail=no
    (
      echo "14. copy-leading-trailing.at:1: testing ..."
      $at_traceon



cat >copy.inc <<'_ATEOF'

       01 LEADER-VAR-TRAILER PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       COPY "copy.inc" REPLACING
           LEADING  ==LEADER==  BY ==I==.
       PROCEDURE        DIVISION.
           DISPLAY I-VAR-TRAILER NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


$at_traceoff
echo "copy-leading-trailing.at:21: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo copy-leading-trailing.at:21 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-leading-trailing.at:21: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "copy-leading-trailing.at:22: ./prog"
echo copy-leading-trailing.at:22 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-leading-trailing.at:22: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  15 ) # 15. copy-leading-trailing.at:26: COPY REPLACING TRAILING
    at_setup_line='copy-leading-trailing.at:26'
    at_desc='COPY REPLACING TRAILING'
    $at_quiet $ECHO_N " 15: COPY REPLACING TRAILING                      $ECHO_C"
    at_xfail=no
    (
      echo "15. copy-leading-trailing.at:26: testing ..."
      $at_traceon



cat >copy.inc <<'_ATEOF'

       01 LEADER-VAR-TRAILER PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       COPY "copy.inc" REPLACING
           TRAILING ==TRAILER== BY ==01==.
       PROCEDURE        DIVISION.
           DISPLAY LEADER-VAR-01 NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


$at_traceoff
echo "copy-leading-trailing.at:46: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo copy-leading-trailing.at:46 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-leading-trailing.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "copy-leading-trailing.at:47: ./prog"
echo copy-leading-trailing.at:47 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-leading-trailing.at:47: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  16 ) # 16. copy-leading-trailing.at:51: COPY REPLACING LEADING TRAILING
    at_setup_line='copy-leading-trailing.at:51'
    at_desc='COPY REPLACING LEADING TRAILING'
    $at_quiet $ECHO_N " 16: COPY REPLACING LEADING TRAILING              $ECHO_C"
    at_xfail=no
    (
      echo "16. copy-leading-trailing.at:51: testing ..."
      $at_traceon



cat >copy.inc <<'_ATEOF'

       01 LEADER-VAR         PIC X(2) VALUE "OK".
       01 VAR-TRAILER        PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       COPY "copy.inc" REPLACING
           LEADING  ==LEADER==  BY ==I==
           TRAILING ==TRAILER== BY ==01==.
       PROCEDURE        DIVISION.
           DISPLAY I-VAR  NO ADVANCING
           END-DISPLAY.
           DISPLAY VAR-01 NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


$at_traceoff
echo "copy-leading-trailing.at:75: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo copy-leading-trailing.at:75 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-leading-trailing.at:75: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "copy-leading-trailing.at:76: ./prog"
echo copy-leading-trailing.at:76 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OKOK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-leading-trailing.at:76: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  17 ) # 17. end-program-wrong.at:1: Allow wrong pgm-name in END-PROGRAM
    at_setup_line='end-program-wrong.at:1'
    at_desc='Allow wrong pgm-name in END-PROGRAM'
    $at_quiet $ECHO_N " 17: Allow wrong pgm-name in END-PROGRAM          $ECHO_C"
    at_xfail=no
    (
      echo "17. end-program-wrong.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       PROCEDURE        DIVISION.
          DISPLAY "OK" WITH NO ADVANCING.
       END PROGRAM      progprog.
_ATEOF


$at_traceoff
echo "end-program-wrong.at:12: \${COMPILE_JP_COMPAT} prog.cob"
echo end-program-wrong.at:12 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "end-program-wrong.at:12: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  18 ) # 18. evaluate-also-missing.at:1: Allow missing ALSO in EVALUATE-WHEN
    at_setup_line='evaluate-also-missing.at:1'
    at_desc='Allow missing ALSO in EVALUATE-WHEN'
    $at_quiet $ECHO_N " 18: Allow missing ALSO in EVALUATE-WHEN          $ECHO_C"
    at_xfail=no
    (
      echo "18. evaluate-also-missing.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 A PIC 9 VALUE 1.
       01 B PIC 9 VALUE 1.
       PROCEDURE        DIVISION.
       EVALUATE A B
          WHEN 1 1
             DISPLAY "OK" WITH NO ADVANCING
          WHEN OTHER
             DISPLAY "NG" WITH NO ADVANCING
       END-EVALUATE.
       GOBACK.
_ATEOF


$at_traceoff
echo "evaluate-also-missing.at:20: \${COMPILE_JP_COMPAT} prog.cob"
echo evaluate-also-missing.at:20 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "evaluate-also-missing.at:20: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "evaluate-also-missing.at:21: ./prog"
echo evaluate-also-missing.at:21 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "evaluate-also-missing.at:21: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  19 ) # 19. evaluate-also-missing.at:25: Allow missing both ALSO and class condition IS in EVALUATE
    at_setup_line='evaluate-also-missing.at:25'
    at_desc='Allow missing both ALSO and class condition IS in EVALUATE'
    $at_quiet $ECHO_N " 19: Allow missing both ALSO and class condition IS in EVALUATE$ECHO_C"
    at_xfail=no
    (
      echo "19. evaluate-also-missing.at:25: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
       CLASS C-ALPHA IS "A" THRU "Z".
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 C PIC X VALUE "C".
       PROCEDURE        DIVISION.
       EVALUATE C C-ALPHA
          WHEN TRUE
             DISPLAY "OK" WITH NO ADVANCING
          WHEN OTHER
             DISPLAY "NG" WITH NO ADVANCING
       END-EVALUATE.
       GOBACK.
_ATEOF


$at_traceoff
echo "evaluate-also-missing.at:47: \${COMPILE_JP_COMPAT} prog.cob"
echo evaluate-also-missing.at:47 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "evaluate-also-missing.at:47: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "evaluate-also-missing.at:48: ./prog"
echo evaluate-also-missing.at:48 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "evaluate-also-missing.at:48: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  20 ) # 20. empty-imperative.at:1: Allow empty EVALUATE-WHEN OTHER
    at_setup_line='empty-imperative.at:1'
    at_desc='Allow empty EVALUATE-WHEN OTHER'
    $at_quiet $ECHO_N " 20: Allow empty EVALUATE-WHEN OTHER              $ECHO_C"
    at_xfail=no
    (
      echo "20. empty-imperative.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 A PIC 9 VALUE 1.
       01 B PIC 9 VALUE 1.
       PROCEDURE        DIVISION.
       EVALUATE A ALSO B
          WHEN 1 ALSO 1
             DISPLAY "OK" WITH NO ADVANCING
          WHEN OTHER
       END-EVALUATE.
       GOBACK.
_ATEOF


$at_traceoff
echo "empty-imperative.at:19: \${COMPILE_JP_COMPAT} prog.cob"
echo empty-imperative.at:19 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "empty-imperative.at:19: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "empty-imperative.at:20: ./prog"
echo empty-imperative.at:20 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "empty-imperative.at:20: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  21 ) # 21. empty-imperative.at:24: Allow empty ELSE
    at_setup_line='empty-imperative.at:24'
    at_desc='Allow empty ELSE'
    $at_quiet $ECHO_N " 21: Allow empty ELSE                             $ECHO_C"
    at_xfail=no
    (
      echo "21. empty-imperative.at:24: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 A PIC 9 VALUE 1.
       01 B PIC 9 VALUE 1.
       PROCEDURE        DIVISION.
       IF A = B THEN
          DISPLAY "OK" WITH NO ADVANCING
       ELSE
       END-IF.
       GOBACK.
_ATEOF


$at_traceoff
echo "empty-imperative.at:41: \${COMPILE_JP_COMPAT} prog.cob"
echo empty-imperative.at:41 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "empty-imperative.at:41: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "empty-imperative.at:42: ./prog"
echo empty-imperative.at:42 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "empty-imperative.at:42: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  22 ) # 22. empty-imperative.at:46: Empty IF by unsupported stmt
    at_setup_line='empty-imperative.at:46'
    at_desc='Empty IF by unsupported stmt'
    $at_quiet $ECHO_N " 22: Empty IF by unsupported stmt                 $ECHO_C"
    at_xfail=no
    (
      echo "22. empty-imperative.at:46: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION        DIVISION.
       PROGRAM-ID.           prog.
       DATA                  DIVISION.
       WORKING-STORAGE       SECTION.
       01  X-01              PIC X(10).
       PROCEDURE             DIVISION.
            if X-01 = " "  stop "test".
            GOBACK.
_ATEOF


$at_traceoff
echo "empty-imperative.at:59: \${COMPILE_DEFAULT} prog.cob"
echo empty-imperative.at:59 >$at_check_line_file
( $at_traceon; ${COMPILE_DEFAULT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "empty-imperative.at:59: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "empty-imperative.at:60: ./prog"
echo empty-imperative.at:60 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "empty-imperative.at:60: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  23 ) # 23. empty-imperative.at:64: Allow empty EVALUATE- before WHEN OTHER
    at_setup_line='empty-imperative.at:64'
    at_desc='Allow empty EVALUATE- before WHEN OTHER'
    $at_quiet $ECHO_N " 23: Allow empty EVALUATE- before WHEN OTHER      $ECHO_C"
    at_xfail=no
    (
      echo "23. empty-imperative.at:64: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 A PIC 9 VALUE 0.
       PROCEDURE        DIVISION.
           EVALUATE A
             WHEN 1
               DISPLAY "NG" WITH NO ADVANCING
             WHEN 2
             WHEN OTHER
               DISPLAY "OK" WITH NO ADVANCING
           END-EVALUATE.
           GOBACK.
_ATEOF


$at_traceoff
echo "empty-imperative.at:83: \${COMPILE_JP_COMPAT} prog.cob"
echo empty-imperative.at:83 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "empty-imperative.at:83: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "empty-imperative.at:84: ./prog"
echo empty-imperative.at:84 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "empty-imperative.at:84: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  24 ) # 24. empty-imperative.at:88: Allow empty EVALUATE- semantics
    at_setup_line='empty-imperative.at:88'
    at_desc='Allow empty EVALUATE- semantics'
    $at_quiet $ECHO_N " 24: Allow empty EVALUATE- semantics              $ECHO_C"
    at_xfail=no
    (
      echo "24. empty-imperative.at:88: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 A PIC 9 VALUE 1.
       PROCEDURE        DIVISION.
           EVALUATE A
             WHEN 1
             WHEN 2
             WHEN OTHER
               DISPLAY "OK" WITH NO ADVANCING
           END-EVALUATE.
           GOBACK.
_ATEOF


$at_traceoff
echo "empty-imperative.at:106: \${COMPILE_JP_COMPAT} prog.cob"
echo empty-imperative.at:106 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "empty-imperative.at:106: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "empty-imperative.at:107: ./prog"
echo empty-imperative.at:107 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "empty-imperative.at:107: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  25 ) # 25. empty-imperative.at:111: Allow empty EVALUATE- semantics 2
    at_setup_line='empty-imperative.at:111'
    at_desc='Allow empty EVALUATE- semantics 2'
    $at_quiet $ECHO_N " 25: Allow empty EVALUATE- semantics 2            $ECHO_C"
    at_xfail=no
    (
      echo "25. empty-imperative.at:111: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 A PIC 9 VALUE 1.
       PROCEDURE        DIVISION.
           EVALUATE A
             WHEN 0
               DISPLAY "NG" WITH NO ADVANCING
             WHEN 1
             WHEN 2
             WHEN OTHER
               DISPLAY "OK" WITH NO ADVANCING
           END-EVALUATE.
           GOBACK.
_ATEOF


$at_traceoff
echo "empty-imperative.at:131: \${COMPILE_JP_COMPAT} prog.cob"
echo empty-imperative.at:131 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "empty-imperative.at:131: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "empty-imperative.at:132: ./prog"
echo empty-imperative.at:132 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "empty-imperative.at:132: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  26 ) # 26. empty-imperative.at:136: Allow empty EVALUATE- semantics 3
    at_setup_line='empty-imperative.at:136'
    at_desc='Allow empty EVALUATE- semantics 3'
    $at_quiet $ECHO_N " 26: Allow empty EVALUATE- semantics 3            $ECHO_C"
    at_xfail=no
    (
      echo "26. empty-imperative.at:136: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 A PIC 9 VALUE 0.
       PROCEDURE        DIVISION.
           EVALUATE A
             WHEN 1
             WHEN 2
             WHEN OTHER
               DISPLAY "OK" WITH NO ADVANCING
           END-EVALUATE.
           GOBACK.
_ATEOF


$at_traceoff
echo "empty-imperative.at:154: \${COMPILE_JP_COMPAT} prog.cob"
echo empty-imperative.at:154 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "empty-imperative.at:154: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "empty-imperative.at:155: ./prog"
echo empty-imperative.at:155 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "empty-imperative.at:155: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  27 ) # 27. spl-registers.at:1: PROGRAM-STATUS
    at_setup_line='spl-registers.at:1'
    at_desc='PROGRAM-STATUS'
    $at_quiet $ECHO_N " 27: PROGRAM-STATUS                               $ECHO_C"
    at_xfail=no
    (
      echo "27. spl-registers.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
           MOVE 99 TO PROGRAM-STATUS.
           EXIT PROGRAM.
_ATEOF


$at_traceoff
echo "spl-registers.at:11: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo spl-registers.at:11 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:11: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:12: ./prog"
echo spl-registers.at:12 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   99) ;;
   *) echo "spl-registers.at:12: exit code was $at_status, expected 99"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  28 ) # 28. spl-registers.at:16: SORT-STATUS (alias SORT-RETURN)
    at_setup_line='spl-registers.at:16'
    at_desc='SORT-STATUS (alias SORT-RETURN)'
    $at_quiet $ECHO_N " 28: SORT-STATUS (alias SORT-RETURN)              $ECHO_C"
    at_xfail=no
    (
      echo "28. spl-registers.at:16: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       PROCEDURE            DIVISION.
          MOVE 16 TO SORT-STATUS.
          DISPLAY SORT-RETURN WITH NO ADVANCING.
          STOP RUN.
_ATEOF


$at_traceoff
echo "spl-registers.at:27: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo spl-registers.at:27 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:27: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:28: ./prog"
echo spl-registers.at:28 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "+000000016" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:28: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  29 ) # 29. spl-registers.at:32: SORT-STATUS (Break in input section)
    at_setup_line='spl-registers.at:32'
    at_desc='SORT-STATUS (Break in input section)'
    $at_quiet $ECHO_N " 29: SORT-STATUS (Break in input section)         $ECHO_C"
    at_xfail=no
    (
      echo "29. spl-registers.at:32: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       ENVIRONMENT          DIVISION.
       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
           SELECT SORT-FILE1 ASSIGN TO "S01".
           SELECT INPUT-FILE1  ASSIGN TO "./input.txt".
           SELECT OUTPUT-FILE1 ASSIGN TO "./output.txt".
       DATA                 DIVISION.
       FILE		    SECTION.
       SD SORT-FILE1.
       01 SORT-REC1.
          02 SORT-KEY1  PIC XX.
          02 SORT-DATA1 PIC XX.
       FD INPUT-FILE1.
       01 INPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       FD OUTPUT-FILE1.
       01 OUTPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       PROCEDURE            DIVISION.
          SORT SORT-FILE1 ON ASCENDING KEY SORT-KEY1
             INPUT  PROCEDURE IS IPROC1
             OUTPUT PROCEDURE IS OPROC1.
          GOBACK.
       IPROC1               SECTION.
          OPEN INPUT INPUT-FILE1.
       BEGIN-IPROC1.
          READ INPUT-FILE1 AT END GO TO END-IPROC1.
          MOVE INPUT-REC1 TO SORT-REC1.
          RELEASE SORT-REC1.
      * Break by SORT-STATUS!!
          MOVE 16 TO SORT-STATUS.
          GO TO BEGIN-IPROC1.
       END-IPROC1.
          CLOSE INPUT-FILE1.
          EXIT.
       OPROC1               SECTION.
          OPEN OUTPUT OUTPUT-FILE1.
       BEGIN-OPROC1.
          RETURN SORT-FILE1 AT END GO TO END-OPROC1.
          MOVE SORT-REC1 TO OUTPUT-REC1.
          WRITE OUTPUT-REC1.
          GO TO BEGIN-OPROC1.
       END-OPROC1.
          CLOSE OUTPUT-FILE1.
          EXIT.
       END PROGRAM prog.
_ATEOF


$at_traceoff
echo "spl-registers.at:87: echo -n 030303020301020302020201010301020101 >input.txt"
echo spl-registers.at:87 >$at_check_line_file
( $at_traceon; echo -n 030303020301020302020201010301020101 >input.txt ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:87: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:88: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo spl-registers.at:88 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:88: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:89: ./prog"
echo spl-registers.at:89 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "WARNING - Implicit CLOSE of INPUT-FILE1 (\"./input.txt\")
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:89: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:92: if test -f output.txt ; then echo -n NG ; else echo -n OK ; fi"
echo spl-registers.at:92 >$at_check_line_file
( $at_traceon; if test -f output.txt ; then echo -n NG ; else echo -n OK ; fi ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:92: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  30 ) # 30. spl-registers.at:96: SORT-STATUS (Break in output section)
    at_setup_line='spl-registers.at:96'
    at_desc='SORT-STATUS (Break in output section)'
    $at_quiet $ECHO_N " 30: SORT-STATUS (Break in output section)        $ECHO_C"
    at_xfail=no
    (
      echo "30. spl-registers.at:96: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       ENVIRONMENT          DIVISION.
       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
           SELECT SORT-FILE1 ASSIGN TO "S01".
           SELECT INPUT-FILE1  ASSIGN TO "./input.txt".
           SELECT OUTPUT-FILE1 ASSIGN TO "./output.txt".
       DATA                 DIVISION.
       FILE		    SECTION.
       SD SORT-FILE1.
       01 SORT-REC1.
          02 SORT-KEY1  PIC XX.
          02 SORT-DATA1 PIC XX.
       FD INPUT-FILE1.
       01 INPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       FD OUTPUT-FILE1.
       01 OUTPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       PROCEDURE            DIVISION.
          SORT SORT-FILE1 ON ASCENDING KEY SORT-KEY1
             INPUT  PROCEDURE IS IPROC1
             OUTPUT PROCEDURE IS OPROC1.
          GOBACK.
       IPROC1               SECTION.
          OPEN INPUT INPUT-FILE1.
       BEGIN-IPROC1.
          READ INPUT-FILE1 AT END GO TO END-IPROC1.
          MOVE INPUT-REC1 TO SORT-REC1.
          RELEASE SORT-REC1.
          GO TO BEGIN-IPROC1.
       END-IPROC1.
          CLOSE INPUT-FILE1.
          EXIT.
       OPROC1               SECTION.
          OPEN OUTPUT OUTPUT-FILE1.
       BEGIN-OPROC1.
          RETURN SORT-FILE1 AT END GO TO END-OPROC1.
          MOVE SORT-REC1 TO OUTPUT-REC1.
          WRITE OUTPUT-REC1.
      * Break by SORT-STATUS!!
          MOVE 16 TO SORT-STATUS.
          GO TO BEGIN-OPROC1.
       END-OPROC1.
          CLOSE OUTPUT-FILE1.
          EXIT.
       END PROGRAM prog.
_ATEOF


$at_traceoff
echo "spl-registers.at:151: echo -n 030303020301020302020201010301020101 >input.txt"
echo spl-registers.at:151 >$at_check_line_file
( $at_traceon; echo -n 030303020301020302020201010301020101 >input.txt ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:151: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:152: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo spl-registers.at:152 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:152: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:153: ./prog"
echo spl-registers.at:153 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "WARNING - Implicit CLOSE of OUTPUT-FILE1 (\"./output.txt\")
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:153: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:156: cat output.txt"
echo spl-registers.at:156 >$at_check_line_file
( $at_traceon; cat output.txt ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "0103" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:156: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  31 ) # 31. spl-registers.at:160: SORT-STATUS (Break in section with THRU)
    at_setup_line='spl-registers.at:160'
    at_desc='SORT-STATUS (Break in section with THRU)'
    $at_quiet $ECHO_N " 31: SORT-STATUS (Break in section with THRU)     $ECHO_C"
    at_xfail=no
    (
      echo "31. spl-registers.at:160: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       ENVIRONMENT          DIVISION.
       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
           SELECT SORT-FILE1 ASSIGN TO "S01".
           SELECT INPUT-FILE1  ASSIGN TO "./input.txt".
           SELECT OUTPUT-FILE1 ASSIGN TO "./output.txt".
       DATA                 DIVISION.
       FILE		    SECTION.
       SD SORT-FILE1.
       01 SORT-REC1.
          02 SORT-KEY1  PIC XX.
          02 SORT-DATA1 PIC XX.
       FD INPUT-FILE1.
       01 INPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       FD OUTPUT-FILE1.
       01 OUTPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       PROCEDURE            DIVISION.
          SORT SORT-FILE1 ON ASCENDING KEY SORT-KEY1
             INPUT  PROCEDURE IS IPROC1 THRU END-IPROC1
             OUTPUT PROCEDURE IS OPROC1.
          GOBACK.
       IPROC1               SECTION.
          OPEN INPUT INPUT-FILE1.
       BEGIN-IPROC1.
          READ INPUT-FILE1 AT END GO TO END-IPROC1.
          MOVE INPUT-REC1 TO SORT-REC1.
          RELEASE SORT-REC1.
          GO TO BEGIN-IPROC1.
       END-IPROC1           SECTION.
          CLOSE INPUT-FILE1.
       AFTER-IPROC1         SECTION.
          DISPLAY "OVERRUN!!!!" WITH NO ADVANCING.
          EXIT.
       OPROC1               SECTION.
          OPEN OUTPUT OUTPUT-FILE1.
       BEGIN-OPROC1.
          RETURN SORT-FILE1 AT END GO TO END-OPROC1.
          MOVE SORT-REC1 TO OUTPUT-REC1.
          WRITE OUTPUT-REC1.
      * Break by SORT-STATUS!!
          MOVE 16 TO SORT-STATUS.
          GO TO BEGIN-OPROC1.
       END-OPROC1           SECTION.
          CLOSE OUTPUT-FILE1.
       AFTER-OPROC1         SECTION.
          DISPLAY "OVERRUN!!!!" WITH NO ADVANCING.
          EXIT.
       END PROGRAM prog.
_ATEOF


$at_traceoff
echo "spl-registers.at:219: echo -n 030303020301020302020201010301020101 >input.txt"
echo spl-registers.at:219 >$at_check_line_file
( $at_traceon; echo -n 030303020301020302020201010301020101 >input.txt ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:219: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:220: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo spl-registers.at:220 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:220: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:221: ./prog"
echo spl-registers.at:221 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "WARNING - Implicit CLOSE of OUTPUT-FILE1 (\"./output.txt\")
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:221: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:224: cat output.txt"
echo spl-registers.at:224 >$at_check_line_file
( $at_traceon; cat output.txt ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "0103" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:224: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  32 ) # 32. spl-registers.at:228: SORT-STATUS break in MERGE
    at_setup_line='spl-registers.at:228'
    at_desc='SORT-STATUS break in MERGE'
    $at_quiet $ECHO_N " 32: SORT-STATUS break in MERGE                   $ECHO_C"
    at_xfail=no
    (
      echo "32. spl-registers.at:228: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       ENVIRONMENT          DIVISION.
       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
           SELECT MERGE-FILE1 ASSIGN TO "M01".
           SELECT INPUT-FILE1  ASSIGN TO "./input.txt".
           SELECT INPUT-FILE2  ASSIGN TO "./input2.txt".
           SELECT OUTPUT-FILE1 ASSIGN TO "./output.txt".
       DATA                 DIVISION.
       FILE		    SECTION.
       SD MERGE-FILE1.
       01 MERGE-REC1.
          02 MERGE-KEY1  PIC XX.
          02 MERGE-DATA1 PIC XX.
       FD INPUT-FILE1.
       01 INPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       FD INPUT-FILE2.
       01 INPUT-REC2.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       FD OUTPUT-FILE1.
       01 OUTPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       PROCEDURE            DIVISION.
          MERGE MERGE-FILE1 ON ASCENDING KEY MERGE-KEY1
             USING INPUT-FILE1 INPUT-FILE2
             OUTPUT PROCEDURE IS OPROC1.
          GOBACK.
       OPROC1               SECTION.
          OPEN OUTPUT OUTPUT-FILE1.
       BEGIN-OPROC1.
          RETURN MERGE-FILE1 AT END GO TO END-OPROC1.
          MOVE MERGE-REC1 TO OUTPUT-REC1.
          WRITE OUTPUT-REC1.
      * Break by SORT-STATUS!!
          MOVE 16 TO SORT-STATUS.
          GO TO BEGIN-OPROC1.
       END-OPROC1.
          CLOSE OUTPUT-FILE1.
          EXIT.
       END PROGRAM prog.
_ATEOF


$at_traceoff
echo "spl-registers.at:278: echo -n 030303020301020302020201010301020101 >input.txt"
echo spl-registers.at:278 >$at_check_line_file
( $at_traceon; echo -n 030303020301020302020201010301020101 >input.txt ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:278: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:279: echo -n 030603040305020502060204010601040104 >input2.txt"
echo spl-registers.at:279 >$at_check_line_file
( $at_traceon; echo -n 030603040305020502060204010601040104 >input2.txt ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:279: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:280: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo spl-registers.at:280 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:280: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:281: ./prog"
echo spl-registers.at:281 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "WARNING - Implicit CLOSE of OUTPUT-FILE1 (\"./output.txt\")
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:281: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:284: cat output.txt"
echo spl-registers.at:284 >$at_check_line_file
( $at_traceon; cat output.txt ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "0103" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:284: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  33 ) # 33. spl-registers.at:288: SORT-STATUS break with No SORT-STATUS in pgm
    at_setup_line='spl-registers.at:288'
    at_desc='SORT-STATUS break with No SORT-STATUS in pgm'
    $at_quiet $ECHO_N " 33: SORT-STATUS break with No SORT-STATUS in pgm $ECHO_C"
    at_xfail=no
    (
      echo "33. spl-registers.at:288: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       ENVIRONMENT          DIVISION.
       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
           SELECT SORT-FILE1 ASSIGN TO "S01".
           SELECT INPUT-FILE1  ASSIGN TO "./input.txt".
           SELECT OUTPUT-FILE1 ASSIGN TO "./output.txt".
       DATA                 DIVISION.
       FILE		    SECTION.
       SD SORT-FILE1.
       01 SORT-REC1.
          02 SORT-KEY1  PIC XX.
          02 SORT-DATA1 PIC XX.
       FD INPUT-FILE1.
       01 INPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       FD OUTPUT-FILE1.
       01 OUTPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       PROCEDURE            DIVISION.
          SORT SORT-FILE1 ON ASCENDING KEY SORT-KEY1
             INPUT  PROCEDURE IS IPROC1
             OUTPUT PROCEDURE IS OPROC1.
          GOBACK.
       IPROC1               SECTION.
          OPEN INPUT INPUT-FILE1.
       BEGIN-IPROC1.
          READ INPUT-FILE1 AT END GO TO END-IPROC1.
          MOVE INPUT-REC1 TO SORT-REC1.
          RELEASE SORT-REC1.
          GO TO BEGIN-IPROC1.
       END-IPROC1.
          CLOSE INPUT-FILE1.
          EXIT.
       OPROC1               SECTION.
          OPEN OUTPUT OUTPUT-FILE1.
       BEGIN-OPROC1.
          RETURN SORT-FILE1 AT END GO TO END-OPROC1.
          MOVE SORT-REC1 TO OUTPUT-REC1.
          WRITE OUTPUT-REC1.
      * Break by SORT-RETURN!!
          MOVE 16 TO SORT-RETURN.
          GO TO BEGIN-OPROC1.
       END-OPROC1.
          CLOSE OUTPUT-FILE1.
          EXIT.
       END PROGRAM prog.
_ATEOF


$at_traceoff
echo "spl-registers.at:343: echo -n 030303020301020302020201010301020101 >input.txt"
echo spl-registers.at:343 >$at_check_line_file
( $at_traceon; echo -n 030303020301020302020201010301020101 >input.txt ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:343: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:344: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo spl-registers.at:344 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:344: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:345: ./prog"
echo spl-registers.at:345 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:42: libcob: SORT-STATUS is set to 16.
WARNING - Implicit CLOSE of OUTPUT-FILE1 (\"./output.txt\")
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "spl-registers.at:345: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "spl-registers.at:349: cat output.txt"
echo spl-registers.at:349 >$at_check_line_file
( $at_traceon; cat output.txt ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "0103" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "spl-registers.at:349: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  34 ) # 34. special-names.at:1: ACCEPT ARGUMENT-NUMBER
    at_setup_line='special-names.at:1'
    at_desc='ACCEPT ARGUMENT-NUMBER'
    $at_quiet $ECHO_N " 34: ACCEPT ARGUMENT-NUMBER                       $ECHO_C"
    at_xfail=no
    (
      echo "34. special-names.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           ARGUMENT-NUMBER IS NUMARG.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 argc  PIC 99  USAGE DISPLAY.
       PROCEDURE        DIVISION.
           ACCEPT argc FROM NUMARG.
           DISPLAY argc WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "special-names.at:19: \${COMPILE_JP_COMPAT} -x prog.cob"
echo special-names.at:19 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "special-names.at:19: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "special-names.at:20: ./prog this is arg"
echo special-names.at:20 >$at_check_line_file
( $at_traceon; ./prog this is arg ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "03" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "special-names.at:20: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  35 ) # 35. special-names.at:24: ACCEPT ARGUMENT-VALUE
    at_setup_line='special-names.at:24'
    at_desc='ACCEPT ARGUMENT-VALUE'
    $at_quiet $ECHO_N " 35: ACCEPT ARGUMENT-VALUE                        $ECHO_C"
    at_xfail=no
    (
      echo "35. special-names.at:24: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           ARGUMENT-VALUE  IS ARGVAL.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 argv PIC X(8) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           DISPLAY 3   UPON ARGUMENT-NUMBER
           ACCEPT argv FROM ARGVAL.
           DISPLAY argv NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "special-names.at:43: \${COMPILE_JP_COMPAT} -x prog.cob"
echo special-names.at:43 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "special-names.at:43: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "special-names.at:44: ./prog this is arg"
echo special-names.at:44 >$at_check_line_file
( $at_traceon; ./prog this is arg ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "arg     " | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "special-names.at:44: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  36 ) # 36. special-names.at:48: ACCEPT ENVIRONMENT-VALUE
    at_setup_line='special-names.at:48'
    at_desc='ACCEPT ENVIRONMENT-VALUE'
    $at_quiet $ECHO_N " 36: ACCEPT ENVIRONMENT-VALUE                     $ECHO_C"
    at_xfail=no
    (
      echo "36. special-names.at:48: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           ENVIRONMENT-VALUE IS ENVVAL.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 env1 PIC X(8) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           DISPLAY 'TESTENV' UPON ENVIRONMENT-NAME.
           ACCEPT env1 FROM ENVVAL.
           DISPLAY env1 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "special-names.at:67: \${COMPILE_JP_COMPAT} -x prog.cob"
echo special-names.at:67 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "special-names.at:67: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "special-names.at:68: export TESTENV=envvalue && ./prog"
echo special-names.at:68 >$at_check_line_file
( $at_traceon; export TESTENV=envvalue && ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "envvalue" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "special-names.at:68: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  37 ) # 37. special-names.at:72: DISPLAY ARGUMENT-NUMBER
    at_setup_line='special-names.at:72'
    at_desc='DISPLAY ARGUMENT-NUMBER'
    $at_quiet $ECHO_N " 37: DISPLAY ARGUMENT-NUMBER                      $ECHO_C"
    at_xfail=no
    (
      echo "37. special-names.at:72: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           ARGUMENT-NUMBER IS NUMARG.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 argv PIC X(8) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           DISPLAY 3 UPON NUMARG.
           ACCEPT argv FROM ARGUMENT-VALUE.
           DISPLAY argv WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "special-names.at:91: \${COMPILE_JP_COMPAT} -x prog.cob"
echo special-names.at:91 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "special-names.at:91: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "special-names.at:92: ./prog this is arg"
echo special-names.at:92 >$at_check_line_file
( $at_traceon; ./prog this is arg ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "arg     " | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "special-names.at:92: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  38 ) # 38. special-names.at:96: DISPLAY ENVIRONMENT-NAME
    at_setup_line='special-names.at:96'
    at_desc='DISPLAY ENVIRONMENT-NAME'
    $at_quiet $ECHO_N " 38: DISPLAY ENVIRONMENT-NAME                     $ECHO_C"
    at_xfail=no
    (
      echo "38. special-names.at:96: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           ENVIRONMENT-NAME IS ENVNAME.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 env1 PIC X(8) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           DISPLAY 'TESTENV' UPON ENVNAME.
           ACCEPT env1 FROM ENVIRONMENT-VALUE.
           DISPLAY env1 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "special-names.at:115: \${COMPILE_JP_COMPAT} -x prog.cob"
echo special-names.at:115 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "special-names.at:115: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "special-names.at:116: export TESTENV=envvalue && ./prog"
echo special-names.at:116 >$at_check_line_file
( $at_traceon; export TESTENV=envvalue && ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "envvalue" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "special-names.at:116: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  39 ) # 39. special-names.at:120: DISPLAY ENVIRONMENT-VALUE
    at_setup_line='special-names.at:120'
    at_desc='DISPLAY ENVIRONMENT-VALUE'
    $at_quiet $ECHO_N " 39: DISPLAY ENVIRONMENT-VALUE                    $ECHO_C"
    at_xfail=no
    (
      echo "39. special-names.at:120: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           ENVIRONMENT-VALUE IS ENVVAL.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 env1 PIC X(8) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           DISPLAY 'TESTENV' UPON ENVIRONMENT-NAME.
           ACCEPT env1 FROM ENVVAL.
           DISPLAY env1 WITH NO ADVANCING.
           DISPLAY ":" WITH NO ADVANCING.
           DISPLAY 'newvalue' UPON ENVVAL.
           ACCEPT env1 FROM ENVVAL.
           DISPLAY env1 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "special-names.at:143: \${COMPILE_JP_COMPAT} -x prog.cob"
echo special-names.at:143 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "special-names.at:143: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "special-names.at:144: export TESTENV=envvalue && ./prog"
echo special-names.at:144 >$at_check_line_file
( $at_traceon; export TESTENV=envvalue && ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "envvalue:newvalue" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "special-names.at:144: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  40 ) # 40. special-names.at:148: SPECIAL NAMES unterminated
    at_setup_line='special-names.at:148'
    at_desc='SPECIAL NAMES unterminated'
    $at_quiet $ECHO_N " 40: SPECIAL NAMES unterminated                   $ECHO_C"
    at_xfail=no
    (
      echo "40. special-names.at:148: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           SWITCH-1 IS SW01 ON SW01ON OFF SW01OFF
           C01      IS LF
       DATA             DIVISION.
_ATEOF


$at_traceoff
echo "special-names.at:161: \${COMPILE} prog.cob"
echo special-names.at:161 >$at_check_line_file
( $at_traceon; ${COMPILE} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "special-names.at:161: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  41 ) # 41. intr-funcs.at:1: FUNCTION LENG (fixed)
    at_setup_line='intr-funcs.at:1'
    at_desc='FUNCTION LENG (fixed)'
    $at_quiet $ECHO_N " 41: FUNCTION LENG (fixed)                        $ECHO_C"
    at_xfail=no
    (
      echo "41. intr-funcs.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 FIXED_FLD PIC X(8) USAGE DISPLAY.
       77 NLEN      PIC 9(2) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           MOVE FUNCTION LENG (FIXED_FLD) TO NLEN.
           DISPLAY NLEN WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "intr-funcs.at:16: \${COMPILE_JP_COMPAT} -x prog.cob"
echo intr-funcs.at:16 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "intr-funcs.at:16: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "intr-funcs.at:17: ./prog"
echo intr-funcs.at:17 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "08" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "intr-funcs.at:17: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  42 ) # 42. intr-funcs.at:21: FUNCTION LENG (occur. depending)
    at_setup_line='intr-funcs.at:21'
    at_desc='FUNCTION LENG (occur. depending)'
    $at_quiet $ECHO_N " 42: FUNCTION LENG (occur. depending)             $ECHO_C"
    at_xfail=no
    (
      echo "42. intr-funcs.at:21: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 DEP_FLD.
          03 DEP_ITEM  PIC X(2) OCCURS 1 TO 10 DEPENDING ON NDEP.
       77 NDEP         PIC 9(2) USAGE DISPLAY.
       77 NLEN         PIC 9(2) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           MOVE 2 TO NDEP.
           MOVE FUNCTION LENG (DEP_FLD) TO NLEN.
           DISPLAY NLEN WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "intr-funcs.at:39: \${COMPILE_JP_COMPAT} -x prog.cob"
echo intr-funcs.at:39 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "intr-funcs.at:39: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "intr-funcs.at:40: ./prog"
echo intr-funcs.at:40 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "04" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "intr-funcs.at:40: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  43 ) # 43. intr-funcs.at:44: FUNCTION LENGTH-AN (fixed)
    at_setup_line='intr-funcs.at:44'
    at_desc='FUNCTION LENGTH-AN (fixed)'
    $at_quiet $ECHO_N " 43: FUNCTION LENGTH-AN (fixed)                   $ECHO_C"
    at_xfail=no
    (
      echo "43. intr-funcs.at:44: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 FIXED_FLD PIC X(8) USAGE DISPLAY.
       77 NLEN      PIC 9(2) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           MOVE FUNCTION LENGTH-AN (FIXED_FLD) TO NLEN.
           DISPLAY NLEN WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "intr-funcs.at:59: \${COMPILE_JP_COMPAT} -x prog.cob"
echo intr-funcs.at:59 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "intr-funcs.at:59: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "intr-funcs.at:60: ./prog"
echo intr-funcs.at:60 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "08" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "intr-funcs.at:60: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  44 ) # 44. intr-funcs.at:64: FUNCTION LENGTH-AN (occur. depending)
    at_setup_line='intr-funcs.at:64'
    at_desc='FUNCTION LENGTH-AN (occur. depending)'
    $at_quiet $ECHO_N " 44: FUNCTION LENGTH-AN (occur. depending)        $ECHO_C"
    at_xfail=no
    (
      echo "44. intr-funcs.at:64: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 DEP_FLD.
          03 DEP_ITEM  PIC X(2) OCCURS 1 TO 10 DEPENDING ON NDEP.
       77 NDEP         PIC 9(2) USAGE DISPLAY.
       77 NLEN         PIC 9(2) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           MOVE 2 TO NDEP.
           MOVE FUNCTION LENGTH-AN (DEP_FLD) TO NLEN.
           DISPLAY NLEN WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "intr-funcs.at:82: \${COMPILE_JP_COMPAT} -x prog.cob"
echo intr-funcs.at:82 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "intr-funcs.at:82: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "intr-funcs.at:83: ./prog"
echo intr-funcs.at:83 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "04" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "intr-funcs.at:83: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  45 ) # 45. file-control.at:1: Allow no file open (I-O, SEQUENTIAL)
    at_setup_line='file-control.at:1'
    at_desc='Allow no file open (I-O, SEQUENTIAL)'
    $at_quiet $ECHO_N " 45: Allow no file open (I-O, SEQUENTIAL)         $ECHO_C"
    at_xfail=no
    (
      echo "45. file-control.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION SEQUENTIAL
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN I-O TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-control.at:26: \${COMPILE_MODULE} -o prog prog.cob"
echo file-control.at:26 >$at_check_line_file
( $at_traceon; ${COMPILE_MODULE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:27: export OC_IO_CREATES=yes && \${COBCRUN} prog"
echo file-control.at:27 >$at_check_line_file
( $at_traceon; export OC_IO_CREATES=yes && ${COBCRUN} prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "00
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:27: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  46 ) # 46. file-control.at:32: Allow no file open (I-O, LINE SEQ)
    at_setup_line='file-control.at:32'
    at_desc='Allow no file open (I-O, LINE SEQ)'
    $at_quiet $ECHO_N " 46: Allow no file open (I-O, LINE SEQ)           $ECHO_C"
    at_xfail=no
    (
      echo "46. file-control.at:32: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION LINE SEQUENTIAL
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN I-O TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-control.at:57: \${COMPILE_MODULE} -o prog prog.cob"
echo file-control.at:57 >$at_check_line_file
( $at_traceon; ${COMPILE_MODULE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:57: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:58: export OC_IO_CREATES=yes && \${COBCRUN} prog"
echo file-control.at:58 >$at_check_line_file
( $at_traceon; export OC_IO_CREATES=yes && ${COBCRUN} prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "00
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:58: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  47 ) # 47. file-control.at:63: Allow no file open (I-O, RELATIVE)
    at_setup_line='file-control.at:63'
    at_desc='Allow no file open (I-O, RELATIVE)'
    $at_quiet $ECHO_N " 47: Allow no file open (I-O, RELATIVE)           $ECHO_C"
    at_xfail=no
    (
      echo "47. file-control.at:63: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION RELATIVE
                        ACCESS MODE  DYNAMIC
                        RELATIVE KEY TEST-KEY
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN I-O TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-control.at:90: \${COMPILE_MODULE} -o prog prog.cob"
echo file-control.at:90 >$at_check_line_file
( $at_traceon; ${COMPILE_MODULE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:90: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:91: export OC_IO_CREATES=yes && \${COBCRUN} prog"
echo file-control.at:91 >$at_check_line_file
( $at_traceon; export OC_IO_CREATES=yes && ${COBCRUN} prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "00
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:91: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  48 ) # 48. file-control.at:96: Allow no file open (I-O, INDEXED)
    at_setup_line='file-control.at:96'
    at_desc='Allow no file open (I-O, INDEXED)'
    $at_quiet $ECHO_N " 48: Allow no file open (I-O, INDEXED)            $ECHO_C"
    at_xfail=no
    (
      echo "48. file-control.at:96: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION INDEXED
                        ACCESS MODE  DYNAMIC
                        RECORD KEY TEST-KEY
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN I-O TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-control.at:123: \${COMPILE_MODULE} -o prog prog.cob"
echo file-control.at:123 >$at_check_line_file
( $at_traceon; ${COMPILE_MODULE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:123: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:124: export OC_IO_CREATES=yes && \${COBCRUN} prog"
echo file-control.at:124 >$at_check_line_file
( $at_traceon; export OC_IO_CREATES=yes && ${COBCRUN} prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "00
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:124: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  49 ) # 49. file-control.at:129: Allow no file open (EXTEND, SEQUENTIAL)
    at_setup_line='file-control.at:129'
    at_desc='Allow no file open (EXTEND, SEQUENTIAL)'
    $at_quiet $ECHO_N " 49: Allow no file open (EXTEND, SEQUENTIAL)      $ECHO_C"
    at_xfail=no
    (
      echo "49. file-control.at:129: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION SEQUENTIAL
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN EXTEND TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-control.at:154: \${COMPILE_MODULE} -o prog prog.cob"
echo file-control.at:154 >$at_check_line_file
( $at_traceon; ${COMPILE_MODULE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:154: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:155: export OC_EXTEND_CREATES=yes && \${COBCRUN} prog"
echo file-control.at:155 >$at_check_line_file
( $at_traceon; export OC_EXTEND_CREATES=yes && ${COBCRUN} prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "00
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:155: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  50 ) # 50. file-control.at:160: Allow no file open (EXTEND, LINE SEQ)
    at_setup_line='file-control.at:160'
    at_desc='Allow no file open (EXTEND, LINE SEQ)'
    $at_quiet $ECHO_N " 50: Allow no file open (EXTEND, LINE SEQ)        $ECHO_C"
    at_xfail=no
    (
      echo "50. file-control.at:160: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION LINE SEQUENTIAL
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN EXTEND TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-control.at:185: \${COMPILE_MODULE} -o prog prog.cob"
echo file-control.at:185 >$at_check_line_file
( $at_traceon; ${COMPILE_MODULE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:185: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:186: export OC_EXTEND_CREATES=yes && \${COBCRUN} prog"
echo file-control.at:186 >$at_check_line_file
( $at_traceon; export OC_EXTEND_CREATES=yes && ${COBCRUN} prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "00
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:186: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  51 ) # 51. file-control.at:191: Allow no file open (EXTEND, RELATIVE)
    at_setup_line='file-control.at:191'
    at_desc='Allow no file open (EXTEND, RELATIVE)'
    $at_quiet $ECHO_N " 51: Allow no file open (EXTEND, RELATIVE)        $ECHO_C"
    at_xfail=no
    (
      echo "51. file-control.at:191: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION RELATIVE
                        ACCESS MODE  DYNAMIC
                        RELATIVE KEY TEST-KEY
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN EXTEND TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-control.at:218: \${COMPILE_MODULE} -o prog prog.cob"
echo file-control.at:218 >$at_check_line_file
( $at_traceon; ${COMPILE_MODULE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:218: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:219: export OC_EXTEND_CREATES=yes && \${COBCRUN} prog"
echo file-control.at:219 >$at_check_line_file
( $at_traceon; export OC_EXTEND_CREATES=yes && ${COBCRUN} prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "00
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:219: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  52 ) # 52. file-control.at:224: Allow no file open (EXTEND, INDEXED)
    at_setup_line='file-control.at:224'
    at_desc='Allow no file open (EXTEND, INDEXED)'
    $at_quiet $ECHO_N " 52: Allow no file open (EXTEND, INDEXED)         $ECHO_C"
    at_xfail=no
    (
      echo "52. file-control.at:224: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION INDEXED
                        ACCESS MODE  DYNAMIC
                        RECORD KEY TEST-KEY
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN EXTEND TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-control.at:251: \${COMPILE_MODULE} -o prog prog.cob"
echo file-control.at:251 >$at_check_line_file
( $at_traceon; ${COMPILE_MODULE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:251: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:252: export OC_EXTEND_CREATES=yes && \${COBCRUN} prog"
echo file-control.at:252 >$at_check_line_file
( $at_traceon; export OC_EXTEND_CREATES=yes && ${COBCRUN} prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "00
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:252: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  53 ) # 53. file-control.at:257: Allow file delete (SEQUENTIAL)
    at_setup_line='file-control.at:257'
    at_desc='Allow file delete (SEQUENTIAL)'
    $at_quiet $ECHO_N " 53: Allow file delete (SEQUENTIAL)               $ECHO_C"
    at_xfail=no
    (
      echo "53. file-control.at:257: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION SEQUENTIAL
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN OUTPUT TEST-FILE.
           CLOSE TEST-FILE.
           DELETE FILE TEST-FILE.
           DISPLAY F-STATUS.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-control.at:283: \${COMPILE_MODULE} -o prog prog.cob"
echo file-control.at:283 >$at_check_line_file
( $at_traceon; ${COMPILE_MODULE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:283: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:284: \${COBCRUN} prog"
echo file-control.at:284 >$at_check_line_file
( $at_traceon; ${COBCRUN} prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "00
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:284: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  54 ) # 54. file-control.at:289: Allow file delete (LINE SEQ)
    at_setup_line='file-control.at:289'
    at_desc='Allow file delete (LINE SEQ)'
    $at_quiet $ECHO_N " 54: Allow file delete (LINE SEQ)                 $ECHO_C"
    at_xfail=no
    (
      echo "54. file-control.at:289: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION LINE SEQUENTIAL
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN OUTPUT TEST-FILE.
           CLOSE TEST-FILE.
           DELETE FILE TEST-FILE.
           DISPLAY F-STATUS.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-control.at:315: \${COMPILE_MODULE} -o prog prog.cob"
echo file-control.at:315 >$at_check_line_file
( $at_traceon; ${COMPILE_MODULE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:315: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:316: \${COBCRUN} prog"
echo file-control.at:316 >$at_check_line_file
( $at_traceon; ${COBCRUN} prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "00
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:316: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  55 ) # 55. file-control.at:321: Allow file delete (RELATIVE)
    at_setup_line='file-control.at:321'
    at_desc='Allow file delete (RELATIVE)'
    $at_quiet $ECHO_N " 55: Allow file delete (RELATIVE)                 $ECHO_C"
    at_xfail=no
    (
      echo "55. file-control.at:321: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION RELATIVE
                        ACCESS MODE  DYNAMIC
                        RELATIVE KEY TEST-KEY
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN OUTPUT TEST-FILE.
           CLOSE TEST-FILE.
           DELETE FILE TEST-FILE.
           DISPLAY F-STATUS.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-control.at:349: \${COMPILE_MODULE} -o prog prog.cob"
echo file-control.at:349 >$at_check_line_file
( $at_traceon; ${COMPILE_MODULE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:349: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:350: \${COBCRUN} prog"
echo file-control.at:350 >$at_check_line_file
( $at_traceon; ${COBCRUN} prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "00
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:350: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  56 ) # 56. file-control.at:355: Allow file delete (INDEXED)
    at_setup_line='file-control.at:355'
    at_desc='Allow file delete (INDEXED)'
    $at_quiet $ECHO_N " 56: Allow file delete (INDEXED)                  $ECHO_C"
    at_xfail=no
    (
      echo "56. file-control.at:355: testing ..."
      $at_traceon


$at_traceoff
echo "file-control.at:357: test \$COB_SPLITKEY_FLAGS = \"yes\" || exit 77"
echo file-control.at:357 >$at_check_line_file
( $at_traceon; test $COB_SPLITKEY_FLAGS = "yes" || exit 77 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:357: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION INDEXED
                        ACCESS MODE  DYNAMIC
                        RECORD KEY   TEST-KEY
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN OUTPUT TEST-FILE.
           CLOSE TEST-FILE.
           DELETE FILE TEST-FILE.
           DISPLAY F-STATUS.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-control.at:385: \${COMPILE_MODULE} -o prog prog.cob"
echo file-control.at:385 >$at_check_line_file
( $at_traceon; ${COMPILE_MODULE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:385: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:386: \${COBCRUN} prog"
echo file-control.at:386 >$at_check_line_file
( $at_traceon; ${COBCRUN} prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "00
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:386: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  57 ) # 57. file-control.at:391: Allow file delete (INDEXED) - not available
    at_setup_line='file-control.at:391'
    at_desc='Allow file delete (INDEXED) - not available'
    $at_quiet $ECHO_N " 57: Allow file delete (INDEXED) - not available  $ECHO_C"
    at_xfail=no
    (
      echo "57. file-control.at:391: testing ..."
      $at_traceon


$at_traceoff
echo "file-control.at:393: test \$COB_SPLITKEY_FLAGS = \"no\" || exit 77"
echo file-control.at:393 >$at_check_line_file
( $at_traceon; test $COB_SPLITKEY_FLAGS = "no" || exit 77 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:393: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION INDEXED
                        ACCESS MODE  DYNAMIC
                        RECORD KEY   TEST-KEY
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN OUTPUT TEST-FILE.
           CLOSE TEST-FILE.
           DELETE FILE TEST-FILE.
           DISPLAY F-STATUS.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-control.at:421: \${COMPILE_MODULE} -o prog prog.cob"
echo file-control.at:421 >$at_check_line_file
( $at_traceon; ${COMPILE_MODULE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:421: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:422: \${COBCRUN} prog"
echo file-control.at:422 >$at_check_line_file
( $at_traceon; ${COBCRUN} prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "91
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:422: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  58 ) # 58. file-control.at:427: Assume REWRITE for WRITE on OPEN I-O
    at_setup_line='file-control.at:427'
    at_desc='Assume REWRITE for WRITE on OPEN I-O'
    $at_quiet $ECHO_N " 58: Assume REWRITE for WRITE on OPEN I-O         $ECHO_C"
    at_xfail=no
    (
      echo "58. file-control.at:427: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN "TEST-FILE".
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC      PIC X(4).
       PROCEDURE        DIVISION.
           OPEN I-O TEST-FILE.
           READ  TEST-FILE.
           READ  TEST-FILE.
           MOVE  "AAAA" TO TEST-REC.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-control.at:450: echo 000011112222 >TEST-FILE"
echo file-control.at:450 >$at_check_line_file
( $at_traceon; echo 000011112222 >TEST-FILE ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:450: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:451: \${COMPILE_MODULE} -o prog prog.cob"
echo file-control.at:451 >$at_check_line_file
( $at_traceon; ${COMPILE_MODULE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:451: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:452: COB_IO_ASSUME_REWRITE=Y \${COBCRUN} prog"
echo file-control.at:452 >$at_check_line_file
( $at_traceon; COB_IO_ASSUME_REWRITE=Y ${COBCRUN} prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:452: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:453: test \`cat TEST-FILE\` = '0000AAAA2222'"
echo file-control.at:453 >$at_check_line_file
( $at_traceon; test `cat TEST-FILE` = '0000AAAA2222' ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:453: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  59 ) # 59. file-control.at:457: READ/WRITE INVALID KEY on SEQUENTIAL
    at_setup_line='file-control.at:457'
    at_desc='READ/WRITE INVALID KEY on SEQUENTIAL'
    $at_quiet $ECHO_N " 59: READ/WRITE INVALID KEY on SEQUENTIAL         $ECHO_C"
    at_xfail=no
    (
      echo "59. file-control.at:457: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN "TEST-FILE"
                        ORGANIZATION SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC      PIC X(4).
       PROCEDURE        DIVISION.
           OPEN OUTPUT TEST-FILE.
           MOVE  "AAAA" TO TEST-REC.
           WRITE TEST-REC
             INVALID KEY DISPLAY "INVALIDK".
           CLOSE TEST-FILE.
           OPEN INPUT TEST-FILE.
           READ  TEST-FILE
             INVALID KEY DISPLAY "INVALIDK".
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-control.at:484: \${COMPILE_JP_COMPAT} prog.cob"
echo file-control.at:484 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:484: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-control.at:485: \${COMPILE} prog.cob"
echo file-control.at:485 >$at_check_line_file
( $at_traceon; ${COMPILE} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:16: Error: INVALID KEY clause invalid with this file type
prog.cob:21: Error: INVALID KEY clause invalid with this file type
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "file-control.at:485: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  60 ) # 60. file-control.at:492: NOMINAL KEY (PENDING)
    at_setup_line='file-control.at:492'
    at_desc='NOMINAL KEY (PENDING)'
    $at_quiet $ECHO_N " 60: NOMINAL KEY (PENDING)                        $ECHO_C"
    at_xfail=no
    (
      echo "60. file-control.at:492: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN "TEST-FILE"
                        ORGANIZATION INDEXED
                        RECORD  KEY RK01
                        NOMINAL KEY K01.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
         03  RK01  PIC XX.
         03  DT03  PIC X(4).
       WORKING-STORAGE  SECTION.
       01  K01  PIC XX.
_ATEOF


$at_traceoff
echo "file-control.at:514: \${COMPILE} prog.cob"
echo file-control.at:514 >$at_check_line_file
( $at_traceon; ${COMPILE} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:10: Warning: 'NOMINAL KEY' not implemented
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:514: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  61 ) # 61. file-control.at:520: ASSIGN TO multiple Devs. (PENDING)
    at_setup_line='file-control.at:520'
    at_desc='ASSIGN TO multiple Devs. (PENDING)'
    $at_quiet $ECHO_N " 61: ASSIGN TO multiple Devs. (PENDING)           $ECHO_C"
    at_xfail=no
    (
      echo "61. file-control.at:520: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT SORT-FILE ASSIGN 2 FILE1 FILE2.
       DATA             DIVISION.
       FILE             SECTION.
       FD SORT-FILE.
       01 SORT-REC.
         03  RK01  PIC XX.
         03  DT03  PIC X(4).
       WORKING-STORAGE  SECTION.
       01  FILE1  PIC X(10) VALUE "SORT-FILE1".
_ATEOF


$at_traceoff
echo "file-control.at:539: \${COMPILE} prog.cob"
echo file-control.at:539 >$at_check_line_file
( $at_traceon; ${COMPILE} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:7: Warning: 'ASSIGN TO multiple external device names' not implemented
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:539: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  62 ) # 62. file-control.at:545: ASSIGN TO multiple Devs. (PENDING)
    at_setup_line='file-control.at:545'
    at_desc='ASSIGN TO multiple Devs. (PENDING)'
    $at_quiet $ECHO_N " 62: ASSIGN TO multiple Devs. (PENDING)           $ECHO_C"
    at_xfail=no
    (
      echo "62. file-control.at:545: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT SORT-FILE ASSIGN 2 FILE1 FILE2.
       DATA             DIVISION.
       FILE             SECTION.
       FD SORT-FILE.
       01 SORT-REC.
         03  RK01  PIC XX.
         03  DT03  PIC X(4).
_ATEOF


$at_traceoff
echo "file-control.at:562: \${COMPILE_JP_COMPAT} prog.cob"
echo file-control.at:562 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:7: Warning: 'ASSIGN TO multiple external device names' not implemented
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:562: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  63 ) # 63. file-control.at:568: ignore SELECT RESERVE 'NO'
    at_setup_line='file-control.at:568'
    at_desc='ignore SELECT RESERVE 'NO''
    $at_quiet $ECHO_N " 63: ignore SELECT RESERVE 'NO'                   $ECHO_C"
    at_xfail=no
    (
      echo "63. file-control.at:568: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT SORT-FILE ASSIGN "TEST-FILE"
                        RESERVE  NO.
       DATA             DIVISION.
       FILE             SECTION.
       FD SORT-FILE.
       01 SORT-REC.
         03  RK01  PIC XX.
         03  DT03  PIC X(4).
_ATEOF


$at_traceoff
echo "file-control.at:586: \${COMPILE} prog.cob"
echo file-control.at:586 >$at_check_line_file
( $at_traceon; ${COMPILE} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-control.at:586: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  64 ) # 64. file-userfh.at:1: USERFH - READ LOCK - so
    at_setup_line='file-userfh.at:1'
    at_desc='USERFH - READ LOCK - so'
    $at_quiet $ECHO_N " 64: USERFH - READ LOCK - so                      $ECHO_C"
    at_xfail=no
    (
      echo "64. file-userfh.at:1: testing ..."
      $at_traceon


$at_traceoff
echo "file-userfh.at:3: test \$SHREXT != \"dll\" || exit 77"
echo file-userfh.at:3 >$at_check_line_file
( $at_traceon; test $SHREXT != "dll" || exit 77 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-userfh.at:3: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


cat >hoge.c <<'_ATEOF'

#include <stdio.h>
#include <string.h>
#include <libcob/fileio.h>

int hoge (unsigned char *s1, unsigned char *s2, unsigned char *s3, unsigned char *s4,
          unsigned char *s5, unsigned char *s6, unsigned char *s7, unsigned char *s8,
          unsigned char **s9, unsigned char *s10)
{
	if (s8) {
		printf("%s", s8);
	}
	return 0;
}
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION        DIVISION.
       PROGRAM-ID.           prog.
       ENVIRONMENT           DIVISION.
       INPUT-OUTPUT          SECTION.
       FILE-CONTROL.
       SELECT INPUT-FILE     ASSIGN TO "./input.txt".
       DATA                  DIVISION.
       FILE                  SECTION.
       FD  INPUT-FILE.
       01  INPUT-REC.
           03  REC-KEY1      PIC X(4).
           03  REC-KEY2      PIC X(4).
       PROCEDURE             DIVISION.
           OPEN INPUT INPUT-FILE.
           READ INPUT-FILE WITH IGNORE LOCK.
           CLOSE INPUT-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-userfh.at:41: echo -n 12341234 >input.txt"
echo file-userfh.at:41 >$at_check_line_file
( $at_traceon; echo -n 12341234 >input.txt ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-userfh.at:41: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-userfh.at:42: \${CC} -shared -I\${abs_top_srcdir} -o hoge.\${SHREXT} hoge.c -fPIC"
echo file-userfh.at:42 >$at_check_line_file
( $at_traceon; ${CC} -shared -I${abs_top_srcdir} -o hoge.${SHREXT} hoge.c -fPIC ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-userfh.at:42: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-userfh.at:43: \${COMPILE} -x prog.cob"
echo file-userfh.at:43 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-userfh.at:43: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-userfh.at:44: export OC_USERFH=hoge && ./prog"
echo file-userfh.at:44 >$at_check_line_file
( $at_traceon; export OC_USERFH=hoge && ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "257" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-userfh.at:44: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  65 ) # 65. file-userfh.at:48: USERFH - READ LOCK - dll
    at_setup_line='file-userfh.at:48'
    at_desc='USERFH - READ LOCK - dll'
    $at_quiet $ECHO_N " 65: USERFH - READ LOCK - dll                     $ECHO_C"
    at_xfail=no
    (
      echo "65. file-userfh.at:48: testing ..."
      $at_traceon


$at_traceoff
echo "file-userfh.at:50: test \$SHREXT = \"dll\" || exit 77"
echo file-userfh.at:50 >$at_check_line_file
( $at_traceon; test $SHREXT = "dll" || exit 77 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-userfh.at:50: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


cat >hoge.c <<'_ATEOF'

#include <stdio.h>
#include <string.h>
#include <libcob/fileio.h>

int hoge (unsigned char *s1, unsigned char *s2, unsigned char *s3, unsigned char *s4,
          unsigned char *s5, unsigned char *s6, unsigned char *s7, unsigned char *s8,
          unsigned char **s9, unsigned char *s10)
{
	if (s8) {
		printf("%s", s8);
	}
	return 0;
}
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION        DIVISION.
       PROGRAM-ID.           prog.
       ENVIRONMENT           DIVISION.
       INPUT-OUTPUT          SECTION.
       FILE-CONTROL.
       SELECT INPUT-FILE     ASSIGN TO "./input.txt".
       DATA                  DIVISION.
       FILE                  SECTION.
       FD  INPUT-FILE.
       01  INPUT-REC.
           03  REC-KEY1      PIC X(4).
           03  REC-KEY2      PIC X(4).
       PROCEDURE             DIVISION.
           OPEN INPUT INPUT-FILE.
           READ INPUT-FILE WITH IGNORE LOCK.
           CLOSE INPUT-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-userfh.at:88: echo -n 12341234 >input.txt"
echo file-userfh.at:88 >$at_check_line_file
( $at_traceon; echo -n 12341234 >input.txt ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-userfh.at:88: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-userfh.at:89: \${CC} -shared -I\${abs_top_srcdir} -o hoge.\${SHREXT} hoge.c"
echo file-userfh.at:89 >$at_check_line_file
( $at_traceon; ${CC} -shared -I${abs_top_srcdir} -o hoge.${SHREXT} hoge.c ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-userfh.at:89: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-userfh.at:90: \${COMPILE} -x prog.cob"
echo file-userfh.at:90 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-userfh.at:90: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-userfh.at:91: export OC_USERFH=hoge && ./prog"
echo file-userfh.at:91 >$at_check_line_file
( $at_traceon; export OC_USERFH=hoge && ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "257" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-userfh.at:91: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  66 ) # 66. copy-joining.at:1: COPY JOINING AS PREFIX
    at_setup_line='copy-joining.at:1'
    at_desc='COPY JOINING AS PREFIX'
    $at_quiet $ECHO_N " 66: COPY JOINING AS PREFIX                       $ECHO_C"
    at_xfail=no
    (
      echo "66. copy-joining.at:1: testing ..."
      $at_traceon



cat >copy.inc <<'_ATEOF'

       01 TEST-VAR PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       COPY "copy.inc" JOINING O AS PREFIX.
       PROCEDURE        DIVISION.
           DISPLAY O-TEST-VAR NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


$at_traceoff
echo "copy-joining.at:20: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo copy-joining.at:20 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-joining.at:20: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "copy-joining.at:21: ./prog"
echo copy-joining.at:21 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-joining.at:21: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  67 ) # 67. copy-joining.at:25: COPY JOINING AS SUFFIX
    at_setup_line='copy-joining.at:25'
    at_desc='COPY JOINING AS SUFFIX'
    $at_quiet $ECHO_N " 67: COPY JOINING AS SUFFIX                       $ECHO_C"
    at_xfail=no
    (
      echo "67. copy-joining.at:25: testing ..."
      $at_traceon



cat >copy.inc <<'_ATEOF'

       01 TEST-VAR PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       COPY "copy.inc" JOINING X AS SUFFIX.
       PROCEDURE        DIVISION.
           DISPLAY TEST-VAR-X NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


$at_traceoff
echo "copy-joining.at:44: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo copy-joining.at:44 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-joining.at:44: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "copy-joining.at:45: ./prog"
echo copy-joining.at:45 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-joining.at:45: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  68 ) # 68. copy-joining.at:49: JOINING in RECURSIVE COPY
    at_setup_line='copy-joining.at:49'
    at_desc='JOINING in RECURSIVE COPY'
    $at_quiet $ECHO_N " 68: JOINING in RECURSIVE COPY                    $ECHO_C"
    at_xfail=no
    (
      echo "68. copy-joining.at:49: testing ..."
      $at_traceon



cat >copy-2.inc <<'_ATEOF'

       01 TEST-VAR PIC X(2) VALUE "OK".
_ATEOF


cat >copy-1.inc <<'_ATEOF'

       COPY "copy-2.inc".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       COPY "copy-1.inc" JOINING O AS PREFIX.
       PROCEDURE        DIVISION.
           DISPLAY O-TEST-VAR NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


$at_traceoff
echo "copy-joining.at:72: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo copy-joining.at:72 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-joining.at:72: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "copy-joining.at:73: ./prog"
echo copy-joining.at:73 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-joining.at:73: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  69 ) # 69. copy-joining.at:77: JOINed in REDEFINES clause
    at_setup_line='copy-joining.at:77'
    at_desc='JOINed in REDEFINES clause'
    $at_quiet $ECHO_N " 69: JOINed in REDEFINES clause                   $ECHO_C"
    at_xfail=no
    (
      echo "69. copy-joining.at:77: testing ..."
      $at_traceon



cat >copy.inc <<'_ATEOF'

       01 TEST-VAR PIC X(2) VALUE "OK".
       01 TEST-VAR2 REDEFINES TEST-VAR PIC X(2).
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       COPY "copy.inc" JOINING O AS PREFIX.
       PROCEDURE        DIVISION.
           DISPLAY O-TEST-VAR2 NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


$at_traceoff
echo "copy-joining.at:97: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo copy-joining.at:97 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-joining.at:97: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "copy-joining.at:98: ./prog"
echo copy-joining.at:98 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-joining.at:98: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  70 ) # 70. copy-joining.at:102: COPY JOINING EXISTING NAME
    at_setup_line='copy-joining.at:102'
    at_desc='COPY JOINING EXISTING NAME'
    $at_quiet $ECHO_N " 70: COPY JOINING EXISTING NAME                   $ECHO_C"
    at_xfail=no
    (
      echo "70. copy-joining.at:102: testing ..."
      $at_traceon


cat >copy.inc <<'_ATEOF'

       01 TEST-VAR PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 TEST1.
         03 DATA1   PIC X(01).
       COPY "copy.inc" JOINING TEST1 AS PREFIX.
       PROCEDURE        DIVISION.
           DISPLAY TEST1-TEST-VAR NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


$at_traceoff
echo "copy-joining.at:122: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo copy-joining.at:122 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-joining.at:122: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "copy-joining.at:123: ./prog"
echo copy-joining.at:123 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-joining.at:123: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  71 ) # 71. copy-joining.at:127: COPY JOINING Group fields
    at_setup_line='copy-joining.at:127'
    at_desc='COPY JOINING Group fields'
    $at_quiet $ECHO_N " 71: COPY JOINING Group fields                    $ECHO_C"
    at_xfail=no
    (
      echo "71. copy-joining.at:127: testing ..."
      $at_traceon


cat >copy.inc <<'_ATEOF'

       01 TEST-VAR.
         03 TEST-VAR2 PIC X(2) VALUE "NG".
         03 TEST-VAR3 PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 TEST1.
         03 DATA1   PIC X(01).
       COPY "copy.inc" JOINING TEST1 AS PREFIX.
       PROCEDURE        DIVISION.
           DISPLAY TEST1-TEST-VAR3 NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


$at_traceoff
echo "copy-joining.at:149: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo copy-joining.at:149 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-joining.at:149: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "copy-joining.at:150: ./prog"
echo copy-joining.at:150 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-joining.at:150: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  72 ) # 72. copy-joining.at:154: *NO* JOINING following JOINING
    at_setup_line='copy-joining.at:154'
    at_desc='*NO* JOINING following JOINING '
    $at_quiet $ECHO_N " 72: *NO* JOINING following JOINING               $ECHO_C"
    at_xfail=no
    (
      echo "72. copy-joining.at:154: testing ..."
      $at_traceon


cat >copy1.inc <<'_ATEOF'

       01 TEST1-VAR PIC X(2) VALUE "NG".
_ATEOF


cat >copy2.inc <<'_ATEOF'

       01 TEST2-VAR PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 TEST1.
         03 DATA1   PIC X(01).
       COPY "copy1.inc" JOINING TEST1 AS PREFIX.
       COPY "copy2.inc".
       PROCEDURE        DIVISION.
           DISPLAY TEST2-VAR NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


$at_traceoff
echo "copy-joining.at:179: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo copy-joining.at:179 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-joining.at:179: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "copy-joining.at:180: ./prog"
echo copy-joining.at:180 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "copy-joining.at:180: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  73 ) # 73. copy-joining.at:184: *NO* JOINING FILLER
    at_setup_line='copy-joining.at:184'
    at_desc='*NO* JOINING FILLER'
    $at_quiet $ECHO_N " 73: *NO* JOINING FILLER                          $ECHO_C"
    at_xfail=no
    (
      echo "73. copy-joining.at:184: testing ..."
      $at_traceon


cat >copy.inc <<'_ATEOF'

       01 TEST-REC.
         03 TEST-VAR1  PIC X(2).
         03 FILLER     PIC X(2).
         03 TEST-VAR2  PIC X(2).
         03 FILLER     PIC X(2).
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT IN-FILE   ASSIGN "IN-FILE".
       DATA             DIVISION.
       FILE             SECTION.
       FD IN-FILE.
       COPY "copy.inc" JOINING I AS PREFIX.
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "copy-joining.at:209: \${COMPILE_JP_COMPAT} -E prog.cob | grep I-FILLER"
echo copy-joining.at:209 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -E prog.cob | grep I-FILLER ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "copy-joining.at:209: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  74 ) # 74. assign-devicename.at:1: ASSIGN coded device name
    at_setup_line='assign-devicename.at:1'
    at_desc='ASSIGN coded device name'
    $at_quiet $ECHO_N " 74: ASSIGN coded device name                     $ECHO_C"
    at_xfail=no
    (
      echo "74. assign-devicename.at:1: testing ..."
      $at_traceon


cat >TEST1 <<'_ATEOF'
OK.
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT F01 ASSIGN TO SYS01-DA-DK-S-TEST1
                  ORGANIZATION LINE SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD  F01.
       01  F01R         PIC X(8).
       PROCEDURE        DIVISION.
           OPEN INPUT F01.
           READ F01.
           DISPLAY F01R WITH NO ADVANCING.
           CLOSE F01.
_ATEOF


$at_traceoff
echo "assign-devicename.at:25: \${COMPILE_JP_COMPAT} prog.cob"
echo assign-devicename.at:25 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "assign-devicename.at:25: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "assign-devicename.at:26: ./prog"
echo assign-devicename.at:26 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK.     " | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "assign-devicename.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  75 ) # 75. assign-devicename.at:30: ASSIGN coded device w/o def.name
    at_setup_line='assign-devicename.at:30'
    at_desc='ASSIGN coded device w/o def.name'
    $at_quiet $ECHO_N " 75: ASSIGN coded device w/o def.name             $ECHO_C"
    at_xfail=no
    (
      echo "75. assign-devicename.at:30: testing ..."
      $at_traceon


cat >SYS01 <<'_ATEOF'
OK.
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT F01 ASSIGN TO SYS01-DA-DK-S
                  ORGANIZATION LINE SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD  F01.
       01  F01R         PIC X(8).
       PROCEDURE        DIVISION.
           OPEN INPUT F01.
           READ F01.
           DISPLAY F01R WITH NO ADVANCING.
           CLOSE F01.
_ATEOF


$at_traceoff
echo "assign-devicename.at:54: \${COMPILE_JP_COMPAT} prog.cob"
echo assign-devicename.at:54 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "assign-devicename.at:54: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "assign-devicename.at:55: ./prog"
echo assign-devicename.at:55 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK.     " | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "assign-devicename.at:55: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  76 ) # 76. assign-devicename.at:59: ASSIGN coded device name by env.var
    at_setup_line='assign-devicename.at:59'
    at_desc='ASSIGN coded device name by env.var'
    $at_quiet $ECHO_N " 76: ASSIGN coded device name by env.var          $ECHO_C"
    at_xfail=no
    (
      echo "76. assign-devicename.at:59: testing ..."
      $at_traceon


cat >datafile <<'_ATEOF'
OK.
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT F01 ASSIGN TO SYS01-DA-DK-S-TEST1
                  ORGANIZATION LINE SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD  F01.
       01  F01R         PIC X(8).
       PROCEDURE        DIVISION.
           OPEN INPUT F01.
           READ F01.
           DISPLAY F01R WITH NO ADVANCING.
           CLOSE F01.
_ATEOF


$at_traceoff
echo "assign-devicename.at:83: \${COMPILE_JP_COMPAT} prog.cob"
echo assign-devicename.at:83 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "assign-devicename.at:83: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "assign-devicename.at:84: TEST1=datafile ./prog"
echo assign-devicename.at:84 >$at_check_line_file
( $at_traceon; TEST1=datafile ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK.     " | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "assign-devicename.at:84: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  77 ) # 77. assign-devicename.at:88: ASSIGN coded device w/o def.name by env.var
    at_setup_line='assign-devicename.at:88'
    at_desc='ASSIGN coded device w/o def.name by env.var'
    $at_quiet $ECHO_N " 77: ASSIGN coded device w/o def.name by env.var  $ECHO_C"
    at_xfail=no
    (
      echo "77. assign-devicename.at:88: testing ..."
      $at_traceon


cat >datafile <<'_ATEOF'
OK.
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT F01 ASSIGN TO SYS01-DA-DK-S
                  ORGANIZATION LINE SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD  F01.
       01  F01R         PIC X(8).
       PROCEDURE        DIVISION.
           OPEN INPUT F01.
           READ F01.
           DISPLAY F01R WITH NO ADVANCING.
           CLOSE F01.
_ATEOF


$at_traceoff
echo "assign-devicename.at:112: \${COMPILE_JP_COMPAT} prog.cob"
echo assign-devicename.at:112 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "assign-devicename.at:112: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "assign-devicename.at:113: SYS01=datafile ./prog"
echo assign-devicename.at:113 >$at_check_line_file
( $at_traceon; SYS01=datafile ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK.     " | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "assign-devicename.at:113: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  78 ) # 78. job-date.at:1: COB_DATE
    at_setup_line='job-date.at:1'
    at_desc='COB_DATE'
    $at_quiet $ECHO_N " 78: COB_DATE                                     $ECHO_C"
    at_xfail=no
    (
      echo "78. job-date.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  DATE-YMD.
         03  DATE-YY PIC X(2).
         03  DATE-MM PIC X(2).
         03  DATE-DD PIC X(2).
       PROCEDURE        DIVISION.
           ACCEPT DATE-YMD FROM DATE.
           DISPLAY DATE-YMD.
           GOBACK.
_ATEOF


$at_traceoff
echo "job-date.at:18: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo job-date.at:18 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "job-date.at:18: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "job-date.at:19: COB_DATE=1970/01/02 ./prog"
echo job-date.at:19 >$at_check_line_file
( $at_traceon; COB_DATE=1970/01/02 ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "700102
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "job-date.at:19: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  79 ) # 79. job-date.at:25: COB_DATE YYYYMMDD
    at_setup_line='job-date.at:25'
    at_desc='COB_DATE YYYYMMDD'
    $at_quiet $ECHO_N " 79: COB_DATE YYYYMMDD                            $ECHO_C"
    at_xfail=no
    (
      echo "79. job-date.at:25: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  DATE-YMD.
         03  DATE-YYYY PIC X(4).
         03  DATE-MM   PIC X(2).
         03  DATE-DD   PIC X(2).
       PROCEDURE        DIVISION.
           ACCEPT DATE-YMD FROM DATE YYYYMMDD.
           DISPLAY DATE-YMD.
           GOBACK.
_ATEOF


$at_traceoff
echo "job-date.at:42: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo job-date.at:42 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "job-date.at:42: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "job-date.at:43: COB_DATE=1970/01/02 ./prog"
echo job-date.at:43 >$at_check_line_file
( $at_traceon; COB_DATE=1970/01/02 ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "19700102
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "job-date.at:43: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  80 ) # 80. job-date.at:48: COB_DATE DAY
    at_setup_line='job-date.at:48'
    at_desc='COB_DATE DAY'
    $at_quiet $ECHO_N " 80: COB_DATE DAY                                 $ECHO_C"
    at_xfail=no
    (
      echo "80. job-date.at:48: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  DAY-YD.
         03  DAY-YY PIC X(2).
         03  DAY-DD PIC X(3).
       PROCEDURE        DIVISION.
           ACCEPT DAY-YD FROM DAY.
           DISPLAY DAY-YD.
           GOBACK.
_ATEOF


$at_traceoff
echo "job-date.at:64: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo job-date.at:64 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "job-date.at:64: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "job-date.at:65: COB_DATE=1970/02/01 ./prog"
echo job-date.at:65 >$at_check_line_file
( $at_traceon; COB_DATE=1970/02/01 ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "70032
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "job-date.at:65: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  81 ) # 81. job-date.at:70: COB_DATE DAY YYYYDDD
    at_setup_line='job-date.at:70'
    at_desc='COB_DATE DAY YYYYDDD'
    $at_quiet $ECHO_N " 81: COB_DATE DAY YYYYDDD                         $ECHO_C"
    at_xfail=no
    (
      echo "81. job-date.at:70: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  DAY-YD.
         03  DAY-YYYY PIC X(4).
         03  DAY-DD   PIC X(3).
       PROCEDURE        DIVISION.
           ACCEPT DAY-YD FROM DAY YYYYDDD.
           DISPLAY DAY-YD.
           GOBACK.
_ATEOF


$at_traceoff
echo "job-date.at:86: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo job-date.at:86 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "job-date.at:86: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "job-date.at:87: COB_DATE=1970/02/01 ./prog"
echo job-date.at:87 >$at_check_line_file
( $at_traceon; COB_DATE=1970/02/01 ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "1970032
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "job-date.at:87: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  82 ) # 82. job-date.at:92: COB_DATE FUNC. CURRENT-DATE
    at_setup_line='job-date.at:92'
    at_desc='COB_DATE FUNC. CURRENT-DATE'
    $at_quiet $ECHO_N " 82: COB_DATE FUNC. CURRENT-DATE                  $ECHO_C"
    at_xfail=no
    (
      echo "82. job-date.at:92: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  CURR-DATE.
         03  CURR-YYYY PIC X(4).
         03  CURR-MM   PIC X(2).
         03  CURR-DD   PIC X(2).
         03  FILLER    PIC X(13).
       PROCEDURE        DIVISION.
           MOVE FUNCTION CURRENT-DATE TO CURR-DATE.
           DISPLAY CURR-YYYY CURR-MM CURR-DD.
           GOBACK.
_ATEOF


$at_traceoff
echo "job-date.at:110: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo job-date.at:110 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "job-date.at:110: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "job-date.at:111: COB_DATE=1970/01/02 ./prog"
echo job-date.at:111 >$at_check_line_file
( $at_traceon; COB_DATE=1970/01/02 ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "19700102
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "job-date.at:111: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  83 ) # 83. job-date.at:116: COB_DATE FUNC. CURRENT-DATE of time
    at_setup_line='job-date.at:116'
    at_desc='COB_DATE FUNC. CURRENT-DATE of time'
    $at_quiet $ECHO_N " 83: COB_DATE FUNC. CURRENT-DATE of time          $ECHO_C"
    at_xfail=no
    (
      echo "83. job-date.at:116: testing ..."
      $at_traceon


$at_traceoff
echo "job-date.at:118: test \$SHREXT != \"dll\" || exit 77"
echo job-date.at:118 >$at_check_line_file
( $at_traceon; test $SHREXT != "dll" || exit 77 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "job-date.at:118: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  CURR-DATE.
         03  CURR-YYYY PIC 9(4).
         03  CURR-MM   PIC 9(2).
         03  CURR-DD   PIC 9(2).
         03  CURR-H    PIC 9(2).
         03  CURR-M    PIC 9(2).
         03  CURR-S    PIC 9(2).
         03  FILLER    PIC X(7).
       01 CMDLN.
         03  CMDLN-CMD  PIC X(18) VALUE 'expr \( `date +%s`';
         03  FILLER     PIC X(3)  VALUE ' - ';
         03  CMDLN-DT1  PIC X(8)  VALUE '`date -d';
         03  FILLER     PIC X(1)  VALUE "'";
         03  CMDLN-YYYY PIC 9(4);
         03  FILLER     PIC X(1)  VALUE '-';
         03  CMDLN-MM   PIC 9(2);
         03  FILLER     PIC X(1)  VALUE '-';
         03  CMDLN-DD   PIC 9(2);
         03  FILLER     PIC X(1)  VALUE ' ';
         03  CMDLN-H    PIC 9(2);
         03  FILLER     PIC X(1)  VALUE ':';
         03  CMDLN-M    PIC 9(2);
         03  FILLER     PIC X(1)  VALUE ':';
         03  CMDLN-S    PIC 9(2);
         03  FILLER     PIC X(1)  VALUE "'";
         03  CMDLN_DT2  PIC X(13) VALUE ' +%s` \) / 2';
       PROCEDURE        DIVISION.
           MOVE FUNCTION CURRENT-DATE TO CURR-DATE.
           MOVE CURR-YYYY TO CMDLN-YYYY.
           MOVE CURR-MM   TO CMDLN-MM.
           MOVE CURR-DD   TO CMDLN-DD.
           MOVE CURR-H    TO CMDLN-H.
           MOVE CURR-M    TO CMDLN-M.
           MOVE CURR-S    TO CMDLN-S.
           CALL "SYSTEM" USING CMDLN.
           GOBACK.
_ATEOF


$at_traceoff
echo "job-date.at:163: \${COMPILE_JP_COMPAT} -o prog prog.cob"
echo job-date.at:163 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "job-date.at:163: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "job-date.at:164: COB_DATE=\`date +%Y/%m/%d\` ./prog"
echo job-date.at:164 >$at_check_line_file
( $at_traceon; COB_DATE=`date +%Y/%m/%d` ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "0
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "job-date.at:164: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  84 ) # 84. nibble-c-for-unsigned.at:1: Decimal nibble C as unsigned
    at_setup_line='nibble-c-for-unsigned.at:1'
    at_desc='Decimal nibble C as unsigned'
    $at_quiet $ECHO_N " 84: Decimal nibble C as unsigned                 $ECHO_C"
    at_xfail=no
    (
      echo "84. nibble-c-for-unsigned.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  UNI01.
         03 SIGNED01.
           05 SDEC01 PIC S9(2) COMP-3.
         03 UNSIGNED01 REDEFINES SIGNED01.
           05 UDEC01 PIC  9(2) COMP-3.
       PROCEDURE        DIVISION.
           MOVE 1 TO SDEC01.
           IF SDEC01 IS NUMERIC THEN
               DISPLAY "S" WITH NO ADVANCING
           END-IF.
           IF UDEC01 IS NUMERIC THEN
               DISPLAY "U" WITH NO ADVANCING
           END-IF.
           STOP RUN.
_ATEOF


$at_traceoff
echo "nibble-c-for-unsigned.at:24: \${COMPILE} prog.cob"
echo nibble-c-for-unsigned.at:24 >$at_check_line_file
( $at_traceon; ${COMPILE} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "nibble-c-for-unsigned.at:24: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "nibble-c-for-unsigned.at:25: ./prog"
echo nibble-c-for-unsigned.at:25 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "S" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "nibble-c-for-unsigned.at:25: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "nibble-c-for-unsigned.at:26: COB_NIBBLE_C_UNSIGNED=Y ./prog"
echo nibble-c-for-unsigned.at:26 >$at_check_line_file
( $at_traceon; COB_NIBBLE_C_UNSIGNED=Y ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "SU" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "nibble-c-for-unsigned.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  85 ) # 85. upsi-x.at:1: UPSI-x
    at_setup_line='upsi-x.at:1'
    at_desc='UPSI-x'
    $at_quiet $ECHO_N " 85: UPSI-x                                       $ECHO_C"
    at_xfail=no
    (
      echo "85. upsi-x.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           UPSI-0 IS SWIT1
             ON IS SWIT1-ON
             OFF IS SWIT1-OFF
           UPSI-1 IS SWIT2
             ON IS SWIT2-ON
             OFF IS SWIT2-OFF.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       PROCEDURE        DIVISION.
           IF SWIT1-ON
              DISPLAY "ON" NO ADVANCING
              END-DISPLAY
           ELSE
              DISPLAY "OFF" NO ADVANCING
              END-DISPLAY
           END-IF.
           IF SWIT2-ON
              DISPLAY "ON" NO ADVANCING
              END-DISPLAY
           ELSE
              DISPLAY "OFF" NO ADVANCING
              END-DISPLAY
           END-IF.
           SET SWIT1 TO OFF.
           SET SWIT2 TO ON.
           IF SWIT1-ON
              DISPLAY "ON" NO ADVANCING
              END-DISPLAY
           ELSE
              DISPLAY "OFF" NO ADVANCING
              END-DISPLAY
           END-IF.
           IF SWIT2-ON
              DISPLAY "ON" NO ADVANCING
              END-DISPLAY
           ELSE
              DISPLAY "OFF" NO ADVANCING
              END-DISPLAY
           END-IF.
           STOP RUN.
_ATEOF


$at_traceoff
echo "upsi-x.at:51: \${COMPILE_JP_COMPAT} prog.cob"
echo upsi-x.at:51 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "upsi-x.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "upsi-x.at:52: COB_SWITCH_1=ON COB_SWITCH_2=OFF ./prog"
echo upsi-x.at:52 >$at_check_line_file
( $at_traceon; COB_SWITCH_1=ON COB_SWITCH_2=OFF ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "ONOFFOFFON" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "upsi-x.at:52: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  86 ) # 86. cob68-copy.at:1: COBOL68 COPY
    at_setup_line='cob68-copy.at:1'
    at_desc='COBOL68 COPY'
    $at_quiet $ECHO_N " 86: COBOL68 COPY                                 $ECHO_C"
    at_xfail=no
    (
      echo "86. cob68-copy.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 COPY inc1.
       PROCEDURE        DIVISION.
           DISPLAY X-01 WITH NO ADVANCING.
          GOBACK.
_ATEOF


cat >inc1.cpy <<'_ATEOF'

       01 X-NN.
           03 X-11 PIC X VALUE 'A'.
           03 X-12 PIC X VALUE 'B'.
           03 X-13 PIC X VALUE 'C'.
_ATEOF


$at_traceoff
echo "cob68-copy.at:21: \${COMPILE_JP_COMPAT} prog.cob"
echo cob68-copy.at:21 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "cob68-copy.at:21: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "cob68-copy.at:22: ./prog"
echo cob68-copy.at:22 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "ABC" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "cob68-copy.at:22: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  87 ) # 87. cob68-copy.at:25: COBOL68 COPY nested
    at_setup_line='cob68-copy.at:25'
    at_desc='COBOL68 COPY nested'
    $at_quiet $ECHO_N " 87: COBOL68 COPY nested                          $ECHO_C"
    at_xfail=no
    (
      echo "87. cob68-copy.at:25: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 COPY inc1.
       PROCEDURE        DIVISION.
           DISPLAY X-01 WITH NO ADVANCING.
          GOBACK.
_ATEOF


cat >inc1.cpy <<'_ATEOF'

       01 X-N1 COPY inc2.
_ATEOF


cat >inc2.cpy <<'_ATEOF'

       01 X-N2.
           03 X-11 PIC X VALUE 'A'.
           03 X-12 PIC X VALUE 'B'.
           03 X-13 PIC X VALUE 'C'.
_ATEOF


$at_traceoff
echo "cob68-copy.at:49: \${COMPILE_JP_COMPAT} prog.cob"
echo cob68-copy.at:49 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "cob68-copy.at:49: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "cob68-copy.at:50: ./prog"
echo cob68-copy.at:50 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "ABC" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "cob68-copy.at:50: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  88 ) # 88. cob68-copy.at:53: COBOL68 COPY nested fragments
    at_setup_line='cob68-copy.at:53'
    at_desc='COBOL68 COPY nested fragments'
    $at_quiet $ECHO_N " 88: COBOL68 COPY nested fragments                $ECHO_C"
    at_xfail=no
    (
      echo "88. cob68-copy.at:53: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 COPY inc1.
       PROCEDURE        DIVISION.
           DISPLAY X-01 WITH NO ADVANCING.
          GOBACK.
_ATEOF


cat >inc1.cpy <<'_ATEOF'

       01 X-N1 COPY inc2.
           03 X-12 PIC X VALUE 'B'.
           03 X-13 PIC X VALUE 'C'.
_ATEOF


cat >inc2.cpy <<'_ATEOF'

       01 X-N2.
           03 X-11 PIC X VALUE 'A'.
_ATEOF


$at_traceoff
echo "cob68-copy.at:77: \${COMPILE_JP_COMPAT} prog.cob"
echo cob68-copy.at:77 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "cob68-copy.at:77: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "cob68-copy.at:78: ./prog"
echo cob68-copy.at:78 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "ABC" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "cob68-copy.at:78: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  89 ) # 89. cob68-copy.at:81: COBOL68 COPY nested w/ normal
    at_setup_line='cob68-copy.at:81'
    at_desc='COBOL68 COPY nested w/ normal'
    $at_quiet $ECHO_N " 89: COBOL68 COPY nested w/ normal                $ECHO_C"
    at_xfail=no
    (
      echo "89. cob68-copy.at:81: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 COPY inc1.
       PROCEDURE        DIVISION.
           DISPLAY X-01 WITH NO ADVANCING.
          GOBACK.
_ATEOF


cat >inc1.cpy <<'_ATEOF'

       COPY inc2.
_ATEOF


cat >inc2.cpy <<'_ATEOF'

       01 X-N2.
           03 X-11 PIC X VALUE 'A'.
           03 X-12 PIC X VALUE 'B'.
           03 X-13 PIC X VALUE 'C'.
_ATEOF


$at_traceoff
echo "cob68-copy.at:105: \${COMPILE_JP_COMPAT} prog.cob"
echo cob68-copy.at:105 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "cob68-copy.at:105: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "cob68-copy.at:106: ./prog"
echo cob68-copy.at:106 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "ABC" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "cob68-copy.at:106: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  90 ) # 90. cob68-copy.at:109: COBOL68 COPY nested w/ normal 2
    at_setup_line='cob68-copy.at:109'
    at_desc='COBOL68 COPY nested w/ normal 2'
    $at_quiet $ECHO_N " 90: COBOL68 COPY nested w/ normal 2              $ECHO_C"
    at_xfail=no
    (
      echo "90. cob68-copy.at:109: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 COPY inc1.
       PROCEDURE        DIVISION.
           DISPLAY X-01 WITH NO ADVANCING.
          GOBACK.
_ATEOF


cat >inc1.cpy <<'_ATEOF'

       01 X-N2.
       COPY inc2.
_ATEOF


cat >inc2.cpy <<'_ATEOF'

           03 X-11 PIC X VALUE 'A'.
           03 X-12 PIC X VALUE 'B'.
           03 X-13 PIC X VALUE 'C'.
_ATEOF


$at_traceoff
echo "cob68-copy.at:133: \${COMPILE_JP_COMPAT} prog.cob"
echo cob68-copy.at:133 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "cob68-copy.at:133: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "cob68-copy.at:134: ./prog"
echo cob68-copy.at:134 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "ABC" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "cob68-copy.at:134: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  91 ) # 91. switch-no-mnemonic.at:1: SWITCH-x with no mnemonic name
    at_setup_line='switch-no-mnemonic.at:1'
    at_desc='SWITCH-x with no mnemonic name'
    $at_quiet $ECHO_N " 91: SWITCH-x with no mnemonic name               $ECHO_C"
    at_xfail=no
    (
      echo "91. switch-no-mnemonic.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           SWITCH-1
             ON IS SWIT1-ON
             OFF IS SWIT1-OFF
           SWITCH-2
             ON IS SWIT2-ON
             OFF IS SWIT2-OFF.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       PROCEDURE        DIVISION.
           IF SWIT1-ON
              DISPLAY "ON" NO ADVANCING
              END-DISPLAY
           ELSE
              DISPLAY "OFF" NO ADVANCING
              END-DISPLAY
           END-IF.
           IF SWIT2-ON
              DISPLAY "ON" NO ADVANCING
              END-DISPLAY
           ELSE
              DISPLAY "OFF" NO ADVANCING
              END-DISPLAY
           END-IF.
           STOP RUN.
_ATEOF


$at_traceoff
echo "switch-no-mnemonic.at:35: \${COMPILE_JP_COMPAT} prog.cob"
echo switch-no-mnemonic.at:35 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "switch-no-mnemonic.at:35: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "switch-no-mnemonic.at:36: COB_SWITCH_1=ON COB_SWITCH_2=OFF ./prog"
echo switch-no-mnemonic.at:36 >$at_check_line_file
( $at_traceon; COB_SWITCH_1=ON COB_SWITCH_2=OFF ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "ONOFF" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "switch-no-mnemonic.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  92 ) # 92. data-desc-no-dot.at:1: Data description unterminated
    at_setup_line='data-desc-no-dot.at:1'
    at_desc='Data description unterminated'
    $at_quiet $ECHO_N " 92: Data description unterminated                $ECHO_C"
    at_xfail=no
    (
      echo "92. data-desc-no-dot.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 PIC X VALUE "A"
       01 X-02 PIC X
       PROCEDURE        DIVISION.
           MOVE "B" TO X-02.
           DISPLAY X-01 X-02 WITH NO ADVANCING.
          GOBACK.
_ATEOF


$at_traceoff
echo "data-desc-no-dot.at:16: \${COMPILE_JP_COMPAT} prog.cob"
echo data-desc-no-dot.at:16 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "data-desc-no-dot.at:16: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "data-desc-no-dot.at:17: ./prog"
echo data-desc-no-dot.at:17 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "AB" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "data-desc-no-dot.at:17: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  93 ) # 93. data-desc-no-dot.at:20: Data desc. ambiguous level-num 1
    at_setup_line='data-desc-no-dot.at:20'
    at_desc='Data desc. ambiguous level-num 1'
    $at_quiet $ECHO_N " 93: Data desc. ambiguous level-num 1             $ECHO_C"
    at_xfail=no
    (
      echo "93. data-desc-no-dot.at:20: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 PIC 9 VALUE 03
       01 X-02 PIC 9
       PROCEDURE        DIVISION.
           MOVE 4 TO X-02.
           DISPLAY X-01 X-02 WITH NO ADVANCING.
          GOBACK.
_ATEOF


$at_traceoff
echo "data-desc-no-dot.at:35: \${COMPILE_JP_COMPAT} prog.cob"
echo data-desc-no-dot.at:35 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "data-desc-no-dot.at:35: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "data-desc-no-dot.at:36: ./prog"
echo data-desc-no-dot.at:36 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "34" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "data-desc-no-dot.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  94 ) # 94. data-desc-no-dot.at:39: Data desc. ambiguous level-num 2
    at_setup_line='data-desc-no-dot.at:39'
    at_desc='Data desc. ambiguous level-num 2'
    $at_quiet $ECHO_N " 94: Data desc. ambiguous level-num 2             $ECHO_C"
    at_xfail=no
    (
      echo "94. data-desc-no-dot.at:39: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 PIC 9 VALUE
       03
       01 X-02 PIC 9
       PROCEDURE        DIVISION.
           MOVE 4 TO X-02.
           DISPLAY X-01 X-02 WITH NO ADVANCING.
          GOBACK.
_ATEOF


$at_traceoff
echo "data-desc-no-dot.at:55: \${COMPILE_JP_COMPAT} prog.cob"
echo data-desc-no-dot.at:55 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "data-desc-no-dot.at:55: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "data-desc-no-dot.at:56: ./prog"
echo data-desc-no-dot.at:56 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "34" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "data-desc-no-dot.at:56: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  95 ) # 95. data-desc-no-dot.at:59: Data desc. level-num error after 88
    at_setup_line='data-desc-no-dot.at:59'
    at_desc='Data desc. level-num error after 88'
    $at_quiet $ECHO_N " 95: Data desc. level-num error after 88          $ECHO_C"
    at_xfail=no
    (
      echo "95. data-desc-no-dot.at:59: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 PIC 9
          88 V-01 VALUES 01
       02
       03.
       01 X-02 PIC 9
       01 X-03 PIC 9
          88 V-03 VALUES 01 02 03
       01 X-04 PIC 9
       PROCEDURE        DIVISION.
          GOBACK.
_ATEOF


$at_traceoff
echo "data-desc-no-dot.at:78: \${COMPILE_JP_COMPAT} prog.cob"
echo data-desc-no-dot.at:78 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:10: Error: syntax error, unexpected Identifier, expecting end of file or FUNCTION-ID or PROGRAM-ID
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "data-desc-no-dot.at:78: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  96 ) # 96. data-desc-no-dot.at:83: Data desc. ambiguous level-num (degrade check)
    at_setup_line='data-desc-no-dot.at:83'
    at_desc='Data desc. ambiguous level-num (degrade check)'
    $at_quiet $ECHO_N " 96: Data desc. ambiguous level-num (degrade check)$ECHO_C"
    at_xfail=no
    (
      echo "96. data-desc-no-dot.at:83: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 PIC 9. 01
       X-02 PIC 9.
       PROCEDURE        DIVISION.
          GOBACK.
_ATEOF


$at_traceoff
echo "data-desc-no-dot.at:96: \${COMPILE_JP_COMPAT} prog.cob"
echo data-desc-no-dot.at:96 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "data-desc-no-dot.at:96: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  97 ) # 97. sort-key-is.at:1: SORT KEY IS
    at_setup_line='sort-key-is.at:1'
    at_desc='SORT KEY IS'
    $at_quiet $ECHO_N " 97: SORT KEY IS                                  $ECHO_C"
    at_xfail=no
    (
      echo "97. sort-key-is.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
           SELECT SF01 ASSIGN TO "SFILE".
           SELECT IF01 ASSIGN TO "IFILE".
           SELECT OF01 ASSIGN TO "OFILE".
       DATA             DIVISION.
       FILE             SECTION.
       SD  SF01.
       01  A00.
         02 A001        PIC X(6).
       FD  IF01.
       01  I-A00.
         02 I-A001        PIC X(6).
       FD  OF01.
       01  O-A00.
         02 O-A001        PIC X(6).
       PROCEDURE        DIVISION.
           SORT SF01 ASCENDING KEY IS A001
                USING IF01 GIVING OF01.
           GOBACK.
_ATEOF


$at_traceoff
echo "sort-key-is.at:29: \${COMPILE} prog.cob"
echo sort-key-is.at:29 >$at_check_line_file
( $at_traceon; ${COMPILE} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:23: Error: syntax error
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "sort-key-is.at:29: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "sort-key-is.at:32: \${COMPILE_JP_COMPAT} prog.cob"
echo sort-key-is.at:32 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "sort-key-is.at:32: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  98 ) # 98. search-key-in-rhs.at:1: SEARCH KEY IN RHS
    at_setup_line='search-key-in-rhs.at:1'
    at_desc='SEARCH KEY IN RHS'
    $at_quiet $ECHO_N " 98: SEARCH KEY IN RHS                            $ECHO_C"
    at_xfail=no
    (
      echo "98. search-key-in-rhs.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  WK00.
         03 TBL00 OCCURS 5 TIMES
                  ASCENDING KEY D0001
                  INDEXED BY    TBL00-IDX.
           05 D0001         PIC 9(4).
           05 D0002         PIC X(4).
       77  CNT00            PIC 9(4).
       PROCEDURE        DIVISION.
           MOVE 1 TO D0001(1).
           MOVE 2 TO D0001(2).
           MOVE 3 TO D0001(3).
           MOVE 4 TO D0001(4).
           MOVE 5 TO D0001(5).
           MOVE "VAL1" TO D0002(1).
           MOVE "VAL2" TO D0002(2).
           MOVE "VAL3" TO D0002(3).
           MOVE "VAL4" TO D0002(4).
           MOVE "VAL5" TO D0002(5).
           MOVE 3 TO CNT00.
           SEARCH ALL TBL00 WHEN CNT00 = D0001(TBL00-IDX)
               DISPLAY D0002(TBL00-IDX) WITH NO ADVANCING
           END-SEARCH.
           GOBACK.
_ATEOF


$at_traceoff
echo "search-key-in-rhs.at:33: \${COMPILE_JP_COMPAT} prog.cob"
echo search-key-in-rhs.at:33 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "search-key-in-rhs.at:33: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "search-key-in-rhs.at:34: ./prog"
echo search-key-in-rhs.at:34 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "VAL3" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "search-key-in-rhs.at:34: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  99 ) # 99. verbose-runtime.at:1: COB_VERBOSE file sort
    at_setup_line='verbose-runtime.at:1'
    at_desc='COB_VERBOSE file sort'
    $at_quiet $ECHO_N " 99: COB_VERBOSE file sort                        $ECHO_C"
    at_xfail=no
    (
      echo "99. verbose-runtime.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       ENVIRONMENT          DIVISION.
       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
           SELECT SORT-FILE1 ASSIGN TO "S01"
               ORGANIZATION SEQUENTIAL.
           SELECT INPUT-FILE1  ASSIGN TO "./input.txt".
           SELECT OUTPUT-FILE1 ASSIGN TO "./output.txt".
       DATA                 DIVISION.
       FILE		    SECTION.
       SD SORT-FILE1.
       01 SORT-REC1.
          02 SORT-KEY1  PIC XX.
          02 SORT-DATA1 PIC XX.
       FD INPUT-FILE1.
       01 INPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       FD OUTPUT-FILE1.
       01 OUTPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       PROCEDURE            DIVISION.
          SORT SORT-FILE1 ON ASCENDING KEY SORT-KEY1
             USING INPUT-FILE1
             GIVING OUTPUT-FILE1.
          GOBACK.
_ATEOF


$at_traceoff
echo "verbose-runtime.at:34: echo -n 11CC33AA22BB >input.txt"
echo verbose-runtime.at:34 >$at_check_line_file
( $at_traceon; echo -n 11CC33AA22BB >input.txt ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "verbose-runtime.at:34: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "verbose-runtime.at:35: \${COMPILE} prog.cob"
echo verbose-runtime.at:35 >$at_check_line_file
( $at_traceon; ${COMPILE} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "verbose-runtime.at:35: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "verbose-runtime.at:36: COB_VERBOSE=Y ./prog"
echo verbose-runtime.at:36 >$at_check_line_file
( $at_traceon; COB_VERBOSE=Y ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "libcob: END OF SORT/MERGE, RECORD= 3.
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "verbose-runtime.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  100 ) # 100. occurs-param-order.at:1: OCCURS INDEXED before KEY
    at_setup_line='occurs-param-order.at:1'
    at_desc='OCCURS INDEXED before KEY'
    $at_quiet $ECHO_N "100: OCCURS INDEXED before KEY                    $ECHO_C"
    at_xfail=no
    (
      echo "100. occurs-param-order.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X.
         03 XX OCCURS 10
                 INDEXED       BY I01
                 ASCENDING KEY IS X01.
           05 X01 PIC 9.
           05 X02 PIC X.
_ATEOF


$at_traceoff
echo "occurs-param-order.at:16: \${COMPILE_ONLY} prog.cob"
echo occurs-param-order.at:16 >$at_check_line_file
( $at_traceon; ${COMPILE_ONLY} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "occurs-param-order.at:16: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  101 ) # 101. io-control.at:1: I-O-CONTROL clauses unterminated
    at_setup_line='io-control.at:1'
    at_desc='I-O-CONTROL clauses unterminated'
    $at_quiet $ECHO_N "101: I-O-CONTROL clauses unterminated             $ECHO_C"
    at_xfail=no
    (
      echo "101. io-control.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
           SELECT F01 ASSIGN "TEST-FILE".
           SELECT F02 ASSIGN "TEST-FILE2".
       I-O-CONTROL.
          SAME RECORD AREA FOR F01 F02
       DATA             DIVISION.
       FILE             SECTION.
       FD F01.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       FD F02.
       01 TEST-RECORD2.
         03 TEST-KEY2   PIC 9(10).
_ATEOF


$at_traceoff
echo "io-control.at:23: \${COMPILE_ONLY} prog.cob"
echo io-control.at:23 >$at_check_line_file
( $at_traceon; ${COMPILE_ONLY} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "io-control.at:23: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  102 ) # 102. io-control.at:27: APPLY Clauses (not supported)
    at_setup_line='io-control.at:27'
    at_desc='APPLY Clauses (not supported)'
    $at_quiet $ECHO_N "102: APPLY Clauses (not supported)                $ECHO_C"
    at_xfail=no
    (
      echo "102. io-control.at:27: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       ENVIRONMENT          DIVISION.
       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
           SELECT FILE1  ASSIGN TO "file1".
       I-O-CONTROL.
           APPLY FORMS-OVERLAY TO FMS-OVL   ON FILE1.
           APPLY CLOSE-NOFEED               ON FILE1.
           APPLY COMMITMENT-CONTROL         ON FILE1.
           APPLY CORE-INDEX    TO CORE-IDX  ON FILE1.
           APPLY CYL-OVERFLOW  OF 10 TRACKS ON FILE1.
       DATA                 DIVISION.
       WORKING-STORAGE      SECTION.
       01 FMS-OVL   PIC X(8).
       01 CORE-IDX  PIC X(4).
_ATEOF


$at_traceoff
echo "io-control.at:48: \${COMPILE_ONLY} prog.cob"
echo io-control.at:48 >$at_check_line_file
( $at_traceon; ${COMPILE_ONLY} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:9: Warning: 'APPLY FORMS-OVERLAY' not implemented
prog.cob:10: Warning: 'APPLY CLOSE-NOFEED' not implemented
prog.cob:11: Warning: 'APPLY COMMITMENT-CONTROL' not implemented
prog.cob:12: Warning: 'APPLY CORE-INDEX' not implemented
prog.cob:13: Warning: 'APPLY CYL-OVERFLOW' not implemented
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "io-control.at:48: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  103 ) # 103. greater-less-than-equal.at:1: GREATER/LESS THAN (implicit 'OR') EQUAL
    at_setup_line='greater-less-than-equal.at:1'
    at_desc='GREATER/LESS THAN (implicit 'OR') EQUAL'
    $at_quiet $ECHO_N "103: GREATER/LESS THAN (implicit 'OR') EQUAL      $ECHO_C"
    at_xfail=no
    (
      echo "103. greater-less-than-equal.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
           IF 1 GREATER THAN EQUAL 1 THEN
               DISPLAY "GE OK"
           END-IF.
           IF 1 LESS THAN EQUAL 1 THEN
               DISPLAY "LE OK"
           END-IF.
           GOBACK.
_ATEOF


$at_traceoff
echo "greater-less-than-equal.at:16: \${COMPILE} prog.cob"
echo greater-less-than-equal.at:16 >$at_check_line_file
( $at_traceon; ${COMPILE} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "greater-less-than-equal.at:16: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


$at_traceoff
echo "greater-less-than-equal.at:18: ./prog"
echo greater-less-than-equal.at:18 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "GE OK
LE OK
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "greater-less-than-equal.at:18: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  104 ) # 104. file-desc.at:1: ignore invalid (too short) RECORD CONTAINS
    at_setup_line='file-desc.at:1'
    at_desc='ignore invalid (too short) RECORD CONTAINS '
    $at_quiet $ECHO_N "104: ignore invalid (too short) RECORD CONTAINS   $ECHO_C"
    at_xfail=no
    (
      echo "104. file-desc.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN "TEST-FILE".
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE  RECORD CONTAINS 2.
       01 TEST-REC      PIC X(4).
       PROCEDURE        DIVISION.
           OPEN OUTPUT TEST-FILE.
           MOVE  ALL "A" TO TEST-REC.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-desc.at:22: \${COMPILE} prog.cob"
echo file-desc.at:22 >$at_check_line_file
( $at_traceon; ${COMPILE} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:12: Error: Record size too large 'TEST-REC' (4)
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "file-desc.at:22: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-desc.at:25: \${COMPILE_JP_COMPAT} prog.cob"
echo file-desc.at:25 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-desc.at:25: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-desc.at:26: ./prog"
echo file-desc.at:26 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-desc.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-desc.at:27: od -An -tx1 TEST-FILE | sed -e 's/  */ /g' -e 's/ *\$//'"
echo file-desc.at:27 >$at_check_line_file
( $at_traceon; od -An -tx1 TEST-FILE | sed -e 's/  */ /g' -e 's/ *$//' ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo " 41 41 41 41
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-desc.at:27: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  105 ) # 105. file-desc.at:32: ignore invalid (too large) RECORD CONTAINS
    at_setup_line='file-desc.at:32'
    at_desc='ignore invalid (too large) RECORD CONTAINS '
    $at_quiet $ECHO_N "105: ignore invalid (too large) RECORD CONTAINS   $ECHO_C"
    at_xfail=no
    (
      echo "105. file-desc.at:32: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN "TEST-FILE".
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE  RECORD CONTAINS 8.
       01 TEST-REC      PIC X(4).
       PROCEDURE        DIVISION.
           OPEN OUTPUT TEST-FILE.
           MOVE  ALL "A" TO TEST-REC.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


$at_traceoff
echo "file-desc.at:53: \${COMPILE} prog.cob"
echo file-desc.at:53 >$at_check_line_file
( $at_traceon; ${COMPILE} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-desc.at:53: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-desc.at:54: ./prog"
echo file-desc.at:54 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-desc.at:54: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-desc.at:55: od -An -tx1 TEST-FILE | sed -e 's/  */ /g' -e 's/ *\$//'"
echo file-desc.at:55 >$at_check_line_file
( $at_traceon; od -An -tx1 TEST-FILE | sed -e 's/  */ /g' -e 's/ *$//' ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo " 00 04 00 00 41 41 41 41
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-desc.at:55: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-desc.at:57: \${COMPILE_JP_COMPAT} prog.cob"
echo file-desc.at:57 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-desc.at:57: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-desc.at:58: ./prog"
echo file-desc.at:58 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-desc.at:58: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "file-desc.at:59: od -An -tx1 TEST-FILE | sed -e 's/  */ /g' -e 's/ *\$//'"
echo file-desc.at:59 >$at_check_line_file
( $at_traceon; od -An -tx1 TEST-FILE | sed -e 's/  */ /g' -e 's/ *$//' ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo " 41 41 41 41
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "file-desc.at:59: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  106 ) # 106. abort-on-file-error.at:1: Abort option (default) on non-fatal f-status
    at_setup_line='abort-on-file-error.at:1'
    at_desc='Abort option (default) on non-fatal f-status'
    $at_quiet $ECHO_N "106: Abort option (default) on non-fatal f-status $ECHO_C"
    at_xfail=no
    (
      echo "106. abort-on-file-error.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION  INDEXED
                        ACCESS MODE   DYNAMIC
                        RECORD KEY TEST-KEY.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY   PIC X(4).
          03 TEST-DAT1  PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "0001" TO TEST-KEY.
           MOVE "+AOK" TO TEST-DAT1.
           WRITE TEST-REC.
           MOVE "-DUP" TO TEST-DAT1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           GOBACK.
_ATEOF


$at_traceoff
echo "abort-on-file-error.at:30: \${COMPILE} prog.cob"
echo abort-on-file-error.at:30 >$at_check_line_file
( $at_traceon; ${COMPILE} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "abort-on-file-error.at:30: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "abort-on-file-error.at:31: ./prog >& /dev/null"
echo abort-on-file-error.at:31 >$at_check_line_file
( $at_traceon; ./prog >& /dev/null ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "abort-on-file-error.at:31: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  107 ) # 107. abort-on-file-error.at:35: Abort option (fatal) on non-fatal f-status
    at_setup_line='abort-on-file-error.at:35'
    at_desc='Abort option (fatal) on non-fatal f-status'
    $at_quiet $ECHO_N "107: Abort option (fatal) on non-fatal f-status   $ECHO_C"
    at_xfail=no
    (
      echo "107. abort-on-file-error.at:35: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION  INDEXED
                        ACCESS MODE   DYNAMIC
                        RECORD KEY TEST-KEY.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY   PIC X(4).
          03 TEST-DAT1  PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "0001" TO TEST-KEY.
           MOVE "+AOK" TO TEST-DAT1.
           WRITE TEST-REC.
           MOVE "-DUP" TO TEST-DAT1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           GOBACK.
_ATEOF


$at_traceoff
echo "abort-on-file-error.at:64: \${COMPILE_JP_COMPAT} prog.cob"
echo abort-on-file-error.at:64 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "abort-on-file-error.at:64: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "abort-on-file-error.at:65: ./prog"
echo abort-on-file-error.at:65 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "abort-on-file-error.at:65: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  108 ) # 108. abort-on-file-error.at:69: Abort option (default) on fatal f-status
    at_setup_line='abort-on-file-error.at:69'
    at_desc='Abort option (default) on fatal f-status'
    $at_quiet $ECHO_N "108: Abort option (default) on fatal f-status     $ECHO_C"
    at_xfail=no
    (
      echo "108. abort-on-file-error.at:69: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "nowhere"
                        ORGANIZATION  INDEXED
                        ACCESS MODE   DYNAMIC
                        RECORD KEY TEST-KEY.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY   PIC X(4).
          03 TEST-DAT1  PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  INPUT TEST-FILE.
           CLOSE TEST-FILE.
           GOBACK.
_ATEOF


$at_traceoff
echo "abort-on-file-error.at:93: \${COMPILE} prog.cob"
echo abort-on-file-error.at:93 >$at_check_line_file
( $at_traceon; ${COMPILE} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "abort-on-file-error.at:93: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "abort-on-file-error.at:94: ./prog"
echo abort-on-file-error.at:94 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:18: libcob: File does not exist (STATUS = 35) File : 'nowhere'
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "abort-on-file-error.at:94: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  109 ) # 109. abort-on-file-error.at:100: Abort option (fatal) on fatal file status
    at_setup_line='abort-on-file-error.at:100'
    at_desc='Abort option (fatal) on fatal file status'
    $at_quiet $ECHO_N "109: Abort option (fatal) on fatal file status    $ECHO_C"
    at_xfail=no
    (
      echo "109. abort-on-file-error.at:100: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "nowhere"
                        ORGANIZATION  INDEXED
                        ACCESS MODE   DYNAMIC
                        RECORD KEY TEST-KEY.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY   PIC X(4).
          03 TEST-DAT1  PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  INPUT TEST-FILE.
           CLOSE TEST-FILE.
           GOBACK.
_ATEOF


$at_traceoff
echo "abort-on-file-error.at:124: \${COMPILE_JP_COMPAT} prog.cob"
echo abort-on-file-error.at:124 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "abort-on-file-error.at:124: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "abort-on-file-error.at:125: ./prog"
echo abort-on-file-error.at:125 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:18: libcob: File does not exist (STATUS = 35) File : 'nowhere'
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "abort-on-file-error.at:125: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  * )
    echo "$as_me: no such test group: $at_group" >&2
    continue
    ;;
  esac

  # Be sure to come back to the suite directory, in particular
  # since below we might `rm' the group directory we are in currently.
  cd $at_suite_dir

  case $at_group in
    banner-*) ;;
    *)
      if test ! -f $at_check_line_file; then
	sed "s/^ */$as_me: warning: /" <<_ATEOF
	A failure happened in a test group before any test could be
	run. This means that test suite is improperly designed.  Please
	report this failure to <open-cobol-list@lists.sourceforge.net>.
_ATEOF
    	echo "$at_setup_line" >$at_check_line_file
      fi
      at_group_count=`expr 1 + $at_group_count`
      $at_verbose $ECHO_N "$at_group. $at_setup_line: $ECHO_C"
      echo $ECHO_N "$at_group. $at_setup_line: $ECHO_C" >> $at_group_log
      case $at_xfail:$at_status in
	yes:0)
	    at_msg="UNEXPECTED PASS"
	    at_xpass_list="$at_xpass_list $at_group"
	    at_errexit=$at_errexit_p
	    ;;
	no:0)
	    at_msg="ok"
	    at_pass_list="$at_pass_list $at_group"
	    at_errexit=false
	    ;;
	*:77)
	    at_msg="skipped (`cat $at_check_line_file`)"
	    at_skip_list="$at_skip_list $at_group"
	    at_errexit=false
	    ;;
	yes:*)
	    at_msg="expected failure (`cat $at_check_line_file`)"
	    at_xfail_list="$at_xfail_list $at_group"
	    at_errexit=false
	    ;;
	no:*)
	    at_msg="FAILED (`cat $at_check_line_file`)"
	    at_fail_list="$at_fail_list $at_group"
	    at_errexit=$at_errexit_p
	    ;;
      esac
      echo $at_msg
      at_log_msg="$at_group. $at_desc ($at_setup_line): $at_msg"
      case $at_status in
	0|77)
	  # $at_times_file is only available if the group succeeded.
	  # We're not including the group log, so the success message
	  # is written in the global log separately.  But we also
	  # write to the group log in case they're using -d.
	  if test -f $at_times_file; then
	    at_log_msg="$at_log_msg	(`sed 1d $at_times_file`)"
	    rm -f $at_times_file
          fi
	  echo "$at_log_msg" >> $at_group_log
	  echo "$at_log_msg" >&5

	  # Cleanup the group directory, unless the user wants the files.
	  $at_debug_p || rm -rf $at_group_dir
	  ;;
	*)
	  # Upon failure, include the log into the testsuite's global
	  # log.  The failure message is written in the group log.  It
	  # is later included in the global log.
	  echo "$at_log_msg" >> $at_group_log

	  # Upon failure, keep the group directory for autopsy, and
	  # create the debugging script.
	  {
	    echo "#! /bin/sh"
	    echo 'test "${ZSH_VERSION+set}" = set && alias -g '\''${1+"$@"}'\''='\''"$@"'\'''
	    echo "cd $at_dir"
	    echo 'exec ${CONFIG_SHELL-'"$SHELL"'}' "$0" \
	         '-v -d' "$at_debug_args" "$at_group" '${1+"$@"}'
	    echo 'exit 1'
	  } >$at_group_dir/run
	  chmod +x $at_group_dir/run
	  $at_errexit && break
	  ;;
      esac
      ;;
  esac
done

# Back to the top directory.
cd $at_dir

# Compute the duration of the suite.
at_stop_date=`date`
at_stop_time=`(date +%s) 2>/dev/null`
echo "$as_me: ending at: $at_stop_date" >&5
at_duration_s=`(expr $at_stop_time - $at_start_time) 2>/dev/null`
at_duration_m=`(expr $at_duration_s / 60) 2>/dev/null`
at_duration_h=`(expr $at_duration_m / 60) 2>/dev/null`
at_duration_s=`(expr $at_duration_s % 60) 2>/dev/null`
at_duration_m=`(expr $at_duration_m % 60) 2>/dev/null`
at_duration="${at_duration_h}h ${at_duration_m}m ${at_duration_s}s"
if test "$at_duration" != "h m s"; then
  echo "$as_me: test suite duration: $at_duration" >&5
fi

# Wrap up the test suite with summary statistics.
at_skip_count=`set dummy $at_skip_list; shift; echo $#`
at_fail_count=`set dummy $at_fail_list; shift; echo $#`
at_xpass_count=`set dummy $at_xpass_list; shift; echo $#`
at_xfail_count=`set dummy $at_xfail_list; shift; echo $#`

at_run_count=`expr $at_group_count - $at_skip_count`
at_unexpected_count=`expr $at_xpass_count + $at_fail_count`
at_total_fail_count=`expr $at_xfail_count + $at_fail_count`

echo
cat <<\_ASBOX
## ------------- ##
## Test results. ##
## ------------- ##
_ASBOX
echo
{
  echo
  cat <<\_ASBOX
## ------------- ##
## Test results. ##
## ------------- ##
_ASBOX
  echo
} >&5

if test $at_run_count = 1; then
  at_result="1 test"
  at_were=was
else
  at_result="$at_run_count tests"
  at_were=were
fi
if $at_errexit_p && test $at_unexpected_count != 0; then
  if test $at_xpass_count = 1; then
    at_result="$at_result $at_were run, one passed"
  else
    at_result="$at_result $at_were run, one failed"
  fi
  at_result="$at_result unexpectedly and inhibited subsequent tests."
else
  # Don't you just love exponential explosion of the number of cases?
  case $at_xpass_count:$at_fail_count:$at_xfail_count in
    # So far, so good.
    0:0:0) at_result="$at_result $at_were successful." ;;
    0:0:*) at_result="$at_result behaved as expected." ;;

    # Some unexpected failures
    0:*:0) at_result="$at_result $at_were run,
$at_fail_count failed unexpectedly." ;;

    # Some failures, both expected and unexpected
    0:*:1) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    0:*:*) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;

    # No unexpected failures, but some xpasses
    *:0:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly." ;;

    # No expected failures, but failures and xpasses
    *:1:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failure)." ;;
    *:*:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failures)." ;;

    # All of them.
    *:*:1) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    *:*:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;
  esac

  if test $at_skip_count = 0 && test $at_run_count -gt 1; then
    at_result="All $at_result"
  fi
fi

# Now put skips in the mix.
case $at_skip_count in
  0) ;;
  1) at_result="$at_result
1 test was skipped." ;;
  *) at_result="$at_result
$at_skip_count tests were skipped." ;;
esac

if test $at_unexpected_count = 0; then
  echo "$at_result"
  echo "$at_result" >&5
else
  echo "ERROR: $at_result" >&2
  echo "ERROR: $at_result" >&5
  {
    echo
    cat <<\_ASBOX
## ------------------------ ##
## Summary of the failures. ##
## ------------------------ ##
_ASBOX

    # Summary of failed and skipped tests.
    if test $at_fail_count != 0; then
      echo "Failed tests:"
      $SHELL $0 $at_fail_list --list
      echo
    fi
    if test $at_skip_count != 0; then
      echo "Skipped tests:"
      $SHELL $0 $at_skip_list --list
      echo
    fi
    if test $at_xpass_count != 0; then
      echo "Unexpected passes:"
      $SHELL $0 $at_xpass_list --list
      echo
    fi
    if test $at_fail_count != 0; then
      cat <<\_ASBOX
## ---------------------- ##
## Detailed failed tests. ##
## ---------------------- ##
_ASBOX
      echo
      for at_group in $at_fail_list
      do
        # Normalize the test group number.
        at_group_normalized=`expr "00000$at_group" : ".*\($at_format\)"`
        # Create a fresh directory for the next test group, and enter.
        at_group_dir=$at_suite_dir/$at_group_normalized
        at_group_log=$at_group_dir/$as_me.log
        cat $at_group_log
        echo
      done
      echo
    fi
    if test -n "$at_top_srcdir"; then
      sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $at_top_builddir/config.log ##
_ASBOX
      sed 's/^/| /' $at_top_builddir/config.log
      echo
    fi
  } >&5

  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $as_me.log was created. ##
_ASBOX

  echo
  echo "Please send \`$as_me.log' and all information you think might help:"
  echo
  echo "   To: <open-cobol-list@lists.sourceforge.net>"
  echo "   Subject: [OpenCOBOL 1.1] $as_me:$at_fail_list${at_fail_list:+ failed${at_xpass_list:+,}}$at_xpass_list${at_xpass_list:+ passed unexpectedly}"
  echo
  if test $at_debug_p = false; then
    echo
    echo 'You may investigate any problem if you feel able to do so, in which'
    echo 'case the test suite provides a good starting point.'
    echo
  fi
    exit 1
fi

exit 0


